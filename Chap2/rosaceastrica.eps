%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 28 28 528 543
%%Creator:Apprenti Geometre Version 2
%%Fichier de macros postscript écrites par Guy NOEL. 
%%BeginProlog
/reencdict 12 dict def
/ReEncode
  {reencdict begin
   /newcodesandnames exch def
   /newfontname exch def
   /basefontname exch def
   /basefontdict basefontname findfont def
   /newfont basefontdict maxlength dict def
   basefontdict
     {exch dup /FID ne
       {dup /Encoding eq
         {exch dup length array copy
          newfont 3 1 roll put }
         {exch newfont 3 1 roll put }
         ifelse
       }
       { pop pop }
       ifelse
     } forall
   newfont /FontName newfontname put
   newcodesandnames aload pop
   newcodesandnames length 2 idiv
     {newfont /Encoding get 3 1 roll put}
     repeat
   newfontname newfont definefont pop
   end
} def
% The following is a definition of the National Language characters and codes

/NLSVec [
 16#C0 /Agrave
 16#C1 /Aacute
 16#C2 /Acircumflex
 16#C3 /Atilde
 16#C4 /Adieresis
 16#C5 /Aring
 16#C6 /AE
 16#C7 /Ccedilla
 16#C8 /Egrave
 16#C9 /Eacute
 16#CA /Ecircumflex
 16#CB /Edieresis
 16#CC /Igrave
 16#CD /Iacute
 16#CE /Icircumflex
 16#CF /Idieresis
 16#D0 /Eth
 16#D1 /Ntilde
 16#D2 /Ograve
 16#D3 /Oacute
 16#D4 /Ocircumflex
 16#D5 /Otilde
 16#D6 /Odieresis
 16#D7 /multiply
 16#D8 /Oslash
 16#D9 /Ugrave
 16#DA /Uacute
 16#DB /Ucircumflex
 16#DC /Udieresis
 16#DD /Yacute
 16#DE /Thorn
 16#DF /germandbls
 16#E0 /agrave
 16#E1 /aacute
 16#E2 /acircumflex
 16#E3 /atilde
 16#E4 /adieresis
 16#E5 /aring
 16#E6 /ae
 16#E7 /ccedilla
 16#E8 /egrave
 16#E9 /eacute
 16#EA /ecircumflex
 16#EB /edieresis
 16#EC /igrave
 16#ED /iacute
 16#EE /icircumflex
 16#EF /idieresis
 16#F0 /eth
 16#F1 /ntilde
 16#F2 /ograve
 16#F3 /oacute
 16#F4 /ocircumflex
 16#F5 /otilde
 16#F6 /odieresis
 16#F7 /divide
 16#F8 /oslash
 16#F9 /ugrave
 16#FA /uacute
 16#FB /ucircumflex
 16#FC /udieresis
 16#FD /yacute
 16#FE /thorn
 16#FF /ydieresis
] def

/macrosgn 2048 dict def  %OK
macrosgn begin	      %OK
/BBllx 10000 store /BBlly 10000 store /BBurx 0 store /BBury 0 store
/BBMessage {BB@ut exch writestring  flush} def 
/ajusterBB {eptr@ 2 div 1 add  /suplep exch store 
                     suplep add dup BBury gt {/BBury exch store}{pop} ifelse
                     suplep add dup BBurx gt {/BBurx exch store}{pop} ifelse 
                     suplep sub dup BBlly lt {/BBlly exch store}{pop} ifelse
                     suplep sub dup BBllx lt {/BBllx exch store}{pop} ifelse} def
/afficherBB { (BB.txt) (w) file /BB@ut exch store
                       (llx =) BBMessage  BBllx round str espacer  BBMessage  ( lly =)  BBMessage BBlly round str espacer BBMessage  
                       ( urx =) BBMessage BBurx round str  espacer BBMessage  ( ury =) BBMessage  BBury round str espacer BBMessage
                       BB@ut closefile} def
                     


/nom? {dup type str (nametype) eq} def % xx -> xx true-ou-false
/entier? {dup type str (integertype) eq} def % xx -> xx true-ou-false
/reel? {dup type str (realtype) eq} def % xx -> xx true-ou-false
/nombre? {entier? {true}{reel?} ifelse} def % xx -> xx true-ou-false
/array? {dup type str (arraytype) eq} def % xx -> xx true-ou-false
/nonemptyarray? {array? {dup length 0 gt}{false} ifelse } def % xx -> xx true-ou-false
/point? {array? 
         {dup length 2 eq 
               {dup 0 get nombre? exch pop {dup 1 get nombre? exch pop}{false}ifelse}
               {false} ifelse}
        {false}ifelse} def % % xx -> xx true-ou-false
/secteur? {array? {dup length 4 eq {dup 0 get point? exch pop {dup 1 get point? exch pop {dup 2 get point? exch pop {dup 3 get nombre? exch pop}
                                                                                                                                                                                          {false} ifelse} 
                                                                                                                                               {false} ifelse} 
                                                                                                   {false} ifelse}
                                                       {false} ifelse}
                            {false} ifelse } def 
/suitepoints?{point? {true} {array? {dup true exch {point? exch pop and} forall} {false} ifelse} ifelse} def
                        %% % % xx -> xx true-ou-false
/bipoint? {suitepoints? {dup  length 2 eq} {false} ifelse} def
/droite? {bipoint?} def
/tripoint?{suitepoints? {dup length 3 eq } {false} ifelse} def
/arccercle?{tripoint?} def
/arcellipse?{array?{dup length 4 eq {dup 0 get tripoint? exch pop} {false} ifelse}{false} ifelse} def 
/cercle? {array? {dup length 2 eq
                 {dup 0 get point? exch pop {dup 1 get nombre? exch pop}{false}ifelse}
                 {false} ifelse}
        {false}ifelse} def % % xx -> xx true-ou-false
/chemin? {array? {dup  true exch {point? exch arccercle?  exch  arcellipse?  exch pop or or  and} forall } {false} ifelse} def

/accoupler {2 assembler} bind def
/decoupler {aload pop} bind def
/desassembler{aload pop} bind def
/assembler {array astore} bind def
/str {20 string cvs } bind def
/dans? {decoupler 2 copy gt {exch} if 2 index exch sub epszero ge 3 1 roll exch sub epszero ge or not} def  
        %% syntaxe r [a b] dans? (r, a et b réels) -> true ou false
%/multiple? {anglepolaire exch anglepolaire sub dup 0 eq exch 180 eq or} def 
        %% syntaxe p q multiple?
/alignes? {decoupler 3 assembler vectp abs epszero lt} def
/danssegment?{2 copy alignes? {2 copy decoupler abscisse exch abscisse accoupler exch abscisse exch dans?
                                                    3 1 roll  decoupler ordonnee exch ordonnee accoupler exch ordonnee exch dans? and}
                                                   {pop pop false} ifelse } def

%% Conversion des cm en points
/cm {28.35 mul} def %OK

%% Routines arithmétiques

/max {2 copy lt {exch pop} {pop} ifelse} def
/min {2 copy lt {pop} {exch pop} ifelse} def
/cotg{dup cos exch sin div} def %OK
/tg {dup sin exch cos div} def %OK
/arccos {dup dup mul 1 exch sub sqrt exch atan} def %OK
/arcsin {dup dup mul 1 exch sub sqrt atan} def %OK

%% Conversion des radians en degrés %OK
/rad {180 mul 3.14159 div} def %OK
%% Valeur de pi
/pi 3.14159265 store
%% Valeur de e
/enep 2.718281828459045 store
/signe {dup abs dup 0 gt {div}{pop} ifelse} def
%%Cadre du dessin

/fixecadre {decoupler exch decoupler /y@t exch store /x@t exch store
            decoupler y@t sub /h@ exch store x@t sub /w@ exch store
            } def %OK

%% Fenêtre utilisateur 

/coord {w@ x@a x@i sub div /c@w exch store 
        h@ y@a y@i sub div /c@h exch store
        /M@t [c@w 0 0 c@h x@t c@w x@i mul sub y@t c@h y@i mul sub] store  
        @ngleref
}def %OK


/fixedomaine {decoupler decoupler /y@a exch store /x@a exch store 
                          decoupler /y@i exch store /x@i exch store coord} def %OK


%% Modification des instructions stroke, fill, moveto, lineto, etc
/fillstroke {gsave fill grestore stroke} def
/add2 {dup 4 1 roll add 3 1 roll add exch} def
/triplediag{dup decoupler 1 index eq {eq {1} {0} ifelse}{pop pop 0} ifelse} def %test de l'égalité des trois composantess
/fixcolor{dup length 3 eq {triplediag 1 eq {decoupler pop pop setgray}{decoupler setrgbcolor} ifelse}
                                        {decoupler setcmykcolor} ifelse} def
/stroke {c@ltrait fixcolor epaisseur  pathbbox ajusterBB end  stroke macrosgn begin} def 
/fill {c@lremp length 0 eq {end stroke macrosgn begin} {c@lremp fixcolor pathbbox ajusterBB end fill macrosgn begin} ifelse} def
/eofill {c@lremp length 0 eq {end stroke macrosgn begin} {c@lremp fixcolor end eofill macrosgn begin} ifelse} def
/show{c@lnom fixcolor dup  gsave false charpath pathbbox ajusterBB grestore end show macrosgn begin} def
/moveto{user {M@t transform} if end moveto macrosgn begin} def
/lineto{user {M@t transform} if end lineto macrosgn begin} def
/rmoveto{user {M@t dtransform} if end rmoveto macrosgn begin} def
/rlineto{user {M@t dtransform} if end rlineto macrosgn begin} def
/vr@f [1 0] store
/@ngleref {vr@f decoupler M@t dtransform exch atan /angleref exch store} def

/p@intellipse {/@ngl exch store v@1 c@ntrelli subp v@2 c@ntrelli subp @ngl cos  @ngl sin  combili c@ntrelli addp} def
/@rcellip{ /bet@ exch store /@lpha exch store
                  s@ns 0 gt {bet@ @lpha lt {/bet@ bet@ 360 add store} if}{@lpha bet@ lt {/@lpha @lpha 360 add store} if} ifelse
                  @lpha p@intellipse  decoupler   {lineto} stopped  {moveto macrosgn begin } if
                  @lpha  s@ns 0 gt {1}{-1} ifelse   bet@  {p@intellipse decoupler lineto}  for} def
/arc {user {/s@ns 1 store cercto@llip  @rcellip}{end arc macrosgn begin} ifelse} def
/arcn {user {/s@ns -1 store cercto@llip @rcellip}{end arcn macrosgn begin} ifelse} def
/arcto {user {/r@y exch store accoupler /p@2 exch store accoupler /p@1 exch store currentpoint accoupler /p@0 exch store
                    [p@0 p@1 p@2] vectp 0 gt {-1}{1} ifelse /s@ns exch store
                    p@2 [ p@0 p@1] perpd [ p@0 p@1] interdroites pop dup p@2 exch subp normer  r@y mulp addp [p@0 p@1] paralld
                    [p@0 p@1 p@2] bissecd interdroites pop /q@1 exch store
                    q@1 [p@0 p@1] perpd [p@0 p@1] interdroites pop /q@0 exch store
                    q@1 [p@1 p@2] perpd [p@1 p@2] interdroites pop /q@2 exch store
                    q@0 decoupler lineto q@1 decoupler r@y abs q@0 q@1 subp anglepolaire q@2 q@1 subp anglepolaire cercto@llip @rcellip 
                    q@0 decoupler q@2 decoupler}
                    {end arcto macrosgn begin} ifelse} def
/curveto {user { 3 {M@t transform 6 2 roll} repeat } if end curveto macrosgn begin} def
/updatem@t {M@t  matrix  concatmatrix /M@t exch store @ngleref} def
/tr@nsform {decoupler M@t transform accoupler} def
/translate {user {1 0 0 1 6 4 roll 6 array astore updatem@t} {end  translate macrosgn begin} ifelse} def
/rotate {user {dup cos exch sin 2 copy neg exch  0 0 6 array astore updatem@t} 
                    {end  rotate macrosgn begin} ifelse} def
/scale {user {0 0 3 2 roll 0 0 6 array astore updatem@t} {end scale macrosgn begin} ifelse} def
/concat {user {updatem@t}{end concat macrosgn begin} ifelse} def
/@mpiler {pilem@t [ M@t ] append /pilem@t exch store} def
/d@piler {pilem@t dup dup length 1 sub dup 3 1 roll get /M@t exch store 
          0 exch getinterval /pilem@t exch store } def
/gsave {user {@mpiler} if end gsave macrosgn begin} def
/grestore {user {d@piler @ngleref} if end grestore macrosgn begin} def
/currentpoint{end currentpoint macrosgn begin user {M@t itransform} if } def
/usertrue {/user true store} def
/userfalse {/user false store} def


/rogner {newpath x@i y@i moveto x@a y@i lineto x@a y@a lineto x@i y@a lineto 
                closepath clip newpath} def %OK

/debutrognage {gsave cercle? {calculcercle} if 
                          newpath dup length /n@mbr exch store 
                          dup 0 get decoupler moveto
                          1 1 n@mbr 1 sub {exch dup 3 -1 roll get decoupler lineto} for
                          closepath pop clip} def

/finrognage {grestore} def

/reseau {x@i st@x x@a {y@i st@y y@a {exch dup 3 -1 roll accoupler point} for  pop } for} def 

/quadrillage { x@i st@x x@a {dup y@i moveto y@a lineto stroke} for
                          y@i st@y y@a {dup x@i exch moveto x@a exch lineto stroke} for
                          } def %OK

/quadrillagetirete {traittirete x@i st@x x@a {dup y@i moveto y@a lineto stroke} for
                    y@i st@y y@a {dup x@i exch moveto x@a exch lineto stroke} for
                    traitplein} def %OK

/triangverscar {/v@1 1x st@x mulp store /v@2 v@1 60 rota store
                v@1 v@2 3 2 roll decoupler combili} def


/reseautriangulaire{/v@1 1x st@x mulp store /v@2 v@1 60 rota store
                 st@x 3 sqrt mul 2 div  /st@yy exch store              
                 x@i 2 mul x@a sub st@x div floor 1 x@a 2 mul x@i sub st@x div floor {/x@x exch store 
                 y@i st@yy div floor 1 y@a st@yy div floor 1 add {
                  x@x exch accoupler triangverscar dup dansdomaine? {point}{pop} ifelse} for } for
}def

/triangulation {/v@1 1x st@x mulp store /v@2 v@1 60 rota store /v@3 v@2 60 rota store
                 st@x 3 sqrt mul 2 div  /st@yy exch store              
                 x@i 2 mul x@a sub st@x div floor 1 x@a 2 mul x@i sub st@x div floor  
                 {v@1 exch mulp dup dup v@2 addp accoupler droite dup v@3 addp accoupler droite } for
                 y@i st@yy div floor 1 y@a st@yy div floor 1 add 
                 {0 exch accoupler triangverscar [origine 1x] droiteparall} for
} def   


%% Calcul de l'épaisseur du trait
/epaisseur {eptr@ setlinewidth} def %OK
/fixeepaisseurtrait {/eptr@ exch CoeffAjust mul store} def
/epaisseurtrait {eptr@} def

%% Dessin du cadre et/ou des axes
/fixeposy {/xp@sy exch store} def
/fixeposx {/yp@sx exch store} def

/cadre{[[x@i y@i][x@a y@a]] rectanglediag} def
/cadrerempli {[[x@i y@i][x@a y@a]] rectanglediagrempli} def

/origine {[0 0]} def  
/1x [1 0] store
/1y [0 1] store


/axes  {  epaisseur
          xp@sy [x@i  x@a] dans? {xp@sy y@i moveto xp@sy y@a lineto 
          stroke  xp@sy y@a moveto  90  tip}if 
          yp@sx [y@i  y@a] dans? {x@i yp@sx moveto x@a yp@sx lineto 
          stroke x@a yp@sx moveto 0 tip} if
          } def %OK


/fixepasgraduationx {/st@x exch store} def %OK
/fixepasgraduationy {/st@y exch store} def %OK
/graduercadre{alph  x@i st@x x@a {dup y@i traitvert
                       dup str espacer exch y@i accoupler 0 talph@ 0.66 mul M@t idtransform 
                       accoupler subp etiqhorcc} for 
                       y@i st@y y@a {dup x@i exch traithor
                        dup str espacer ( ) concatener
                        exch x@i exch accoupler etiqhorg} for} def

/gradueraxey {alph  y@i st@y y@a l@bely {st@y sub} if {dup xp@sy exch traithor
                       dup 0 eq {pop}{dup str espacer ( ) concatener 
                       exch xp@sy exch accoupler etiqhorg} ifelse} for} def

/gradueraxex {alph x@i st@x x@a l@belx {st@x sub} if {dup yp@sx traitvert
                       dup str espacer exch yp@sx accoupler 0 talph@ 0.66 mul M@t idtransform 
                       accoupler subp etiqhorcc} for } def

/gradueraxes {gradueraxex gradueraxey} def

% Etiquettes sur les axes 

/etiqx { x@a yp@sx accoupler 0 talph@ 0.66 mul M@t idtransform accoupler subp etiqhorcc /l@belx true store} def
/etiqy {xp@sy y@a accoupler etiqhorg /l@bely true store } def %OK
/etiqsymbx { x@a yp@sx accoupler 0 talph@ 0.66 mul M@t idtransform accoupler subp etiqsymbhorg /l@belx true store} def
/etiqsymby {xp@sy y@a accoupler etiqsymbhorg /l@bely true store } def %OK


/etiquettes {(X) etiqx (Y) etiqy} def %OK

%% Sélection d'une police de caractères

/fixepolice {/alph@ exch store alph@ dup NLSVec ReEncode} def %OK
/fixepolicesymbolique {/symbalph@ exch store} def %OK
/fixecorps {/talph@ exch CoeffAjust mul store} def %OK

%% Police pour texte 
/@lphnorm {findfont talph@ scalefont setfont} def
/@lphret{findfont [talph@ 0 0 talph@ neg 0 0] makefont setfont} def
/@lphhom{findfont [talph@ r@pp mul 0 0 talph@ r@pp mul 0 0] makefont setfont} def
/alph {alph@ @lphnorm} def %OK
/alphret {alph@ @lphret} def %OK
/alphhom{alph@ @lphhom} def
%% Police pour symboles 
/alphsymb{symbalph@ @lphnorm} def %OK
/alphsymbret {symbalph@ @lphret} def %OK
/alphsymbhom{symbalph@ @lphhom} def

%% Ecritures d'étiquettes avec point de référence à gauche, à droite puis au centre 

/@ng 0 store
 
/leverdr@ps{dr@pdessin {dr@psym {alphret} {dr@phom{alphhom}{alph}ifelse} ifelse} {alph} ifelse} def
/leverdr@psymb{dr@pdessin {dr@psym {alphsymbret} {alphsymb} ifelse} {alphsymb} ifelse} def
/@ngletiupdate{dr@pdessin {dr@prot {/@ngleti @ngleti @ngrot add store} if 
                                  dr@psym {/@ngleti dr@ite decoupler exch subp anglepolaire 2 mul @ngleti sub store} if
                                  } if } def

/etiq1 {@ngletiupdate decoupler moveto} def
/etiq2 {show  angleref neg rotate usertrue currentpoint  grestore  moveto } def
/etiqd {etiq1   gsave @ngleti rotate  userfalse  angleref rotate   etiq2}   def
/etiqhord {0 etiqobliqued} def
/etiqverh {90 etiqobliqued} def %OK
/etiqobliqued{leverdr@ps /@ngleti  exch store etiqd}  def % ch ang pt etiqobliqued
/etiqsymbhord {0 etiqsymbobliqued} def
/etiqsymbverh {90 etiqsymbobliqued} def %OK
/etiqsymbobliqued{leverdr@psymb /@ngleti  exch store etiqd}  def % ch pt ang  etiqobliqued

/etiqg {etiq1 dup stringwidth pop neg 0 gsave @ngleti rotate userfalse angleref rotate rmoveto etiq2} def
/etiqhorg {0 etiqobliqueg} def
/etiqverb {90 etiqobliqueg} def %OK
/etiqobliqueg{ leverdr@ps /@ngleti  exch store etiqg}  def % ch pt ang  etiqobliqued
/etiqsymbhorg {0 etiqsymbobliqueg} def
/etiqsymbverb {90 etiqsymbobliqueg} def %OK
/etiqsymbobliqueg{leverdr@psymb /@ngleti  exch store etiqg}  def % ch ang pt etiqobliqueg

/etiqc {etiq1 dup stringwidth pop 2 div neg 0  gsave @ngleti rotate userfalse angleref rotate  rmoveto etiq2} def
/etiqhorc {0 etiqobliquec} def
/etiqverc {90 etiqobliquec} def %OK
/etiqobliquec{ leverdr@ps /@ngleti  exch store etiqc}  def % ch pt ang  etiqobliqued
/etiqsymbhorc {0 etiqsymbobliquec} def
/etiqsymbverc {90 etiqsymbobliquec} def %OK
/etiqsymbobliquec{leverdr@psymb /@ngleti  exch store etiqc}  def % ch ang pt etiqobliqueg

/etiqcc {etiq1 dup  gsave true charpath pathbbox exch   3 1 roll sub 2 div  3 1 roll sub 2 div exch grestore  gsave @ngleti rotate userfalse angleref rotate rmoveto etiq2}  def
/etiqhorcc {0 etiqobliquecc} def
/etiqvercc {90 etiqobliquecc} def %OK
/etiqobliquecc{ leverdr@ps /@ngleti  exch store etiqcc}  def % ch pt ang  etiqobliqued
/etiqsymbhorcc {0 etiqsymbobliquecc} def
/etiqsymbvercc {90 etiqsymbobliquecc} def %OK
/etiqsymbobliquecc{leverdr@psymb /@ngleti  exch store etiqcc}  def % ch ang pt etiqobliqueg

%% Concaténation de deux chaines -- Syntaxe : s1 s2 concatener. Le résultat est sur la pile
/concatener { /s@2 exch def /s@1 exch def s@1 length dup /l@1 exch def 
              s@2 length add string /s@ exch def s@ 0 s@1 putinterval s@ l@1 s@2 putinterval s@} def %OK
/concate {1 sub {concatener} repeat} def %OK concatenation de plus de deux chaines
  % syntaxe ch1 ch2 ... chn n concate résultat sur la pile

%% Concaténation de deux tableaux -- Syntaxe : t1 t2 append. Le résultat est sur la pile
/append { /s@2 exch def /s@1 exch def s@1 length dup /l@1 exch def 
              s@2 length add array /s@ exch def s@ 0 s@1 putinterval s@ l@1 s@2 putinterval s@} def %OK
/appe {1 sub {append} repeat} def %OK concatenation de plus de deux tableaux
  % syntaxe t1 t2 ... tn n appe résultat sur la pile
/ret@urner {/tab@ri exch store tab@ri length 1 sub /n@ exch  store n@  1 add array /tabf@n exch store 0 1 n@  {tab@ri n@  2 index  sub get tabf@n 3 1 roll  put} for tabf@n } def
%% Dessin d'un point 

% Formes possibles :
		   % /dot, /pavetriangle, /pavecarre, /pavepentagone
		   % /pavehexagone  /etoile5 /etoile6
		   % /croix /pavelosange /paverectangle 
               % A l'exception de "croix", ces formes sont remplies

/dotp@l{decoupler 1y exch mulp exch decoupler M@t transform accoupler dup 3 -1 roll addp 
        nc@t 3 array astore userfalse polregrempli usertrue} def
/dot{newpath decoupler /r@yon exch store decoupler M@t transform userfalse r@yon 0 360 arc fillstroke usertrue} def 
/pavetriangle{/nc@t 3 store dotp@l} def
/pavelosange{decoupler  exch  decoupler M@t transform accoupler /pr@vpt exch store 
                       dup 1x exch 0.5 mul mulp  exch dup 1y exch mulp exch  dup 1x exch -0.5 mul mulp exch 1y exch neg  mulp 4 array astore
                      { pr@vpt addp} forall 4 array astore userfalse polygonerempli usertrue } def %OK
/pavepentagone{/nc@t 5 store dotp@l} def %OK
/pavehexagone{/nc@t 6 store dotp@l} def %OK
/pavecarre{decoupler [1 1] exch mulp exch decoupler M@t transform accoupler dup 3 -1 roll addp 
           4 3 array astore userfalse polregrempli usertrue} def
/etoile5{decoupler [0 1.5] exch mulp exch decoupler M@t transform accoupler dup 3 -1 roll addp 
         5 2 4 array astore userfalse poletoilerempli usertrue} def
/etoile6{decoupler [0 1.5] exch mulp exch decoupler M@t transform accoupler dup 3 -1 roll addp 
         6 2 4 array astore userfalse poletoilerempli usertrue} def
/croix{decoupler 1y exch mulp exch decoupler M@t transform accoupler dup 3 -1 roll addp 
       4 2 4 array astore userfalse poletoilesommets decoupler segment segment usertrue} def %OK
/paverectangle{decoupler exch decoupler M@t transform accoupler exch 
               n@m 0 eq {[1 2 sqrt] exch mulp 2 copy subp 3 1 roll addp accoupler 
                         userfalse rectanglediagrempli usertrue}
                  {pop 2 index str newpath 0 0 moveto true charpath pathbbox 3 -1 roll sub 
                 3 1 roll exch sub exch accoupler 2 divp [diamdot dup] addp 
                 2 copy subp 3 1 roll addp accoupler userfalse rectanglediagrempli usertrue}
                 ifelse } def %OK

/fixetaillepoint {/diamdot exch CoeffAjust mul store} def
/fixeformepoint{/f@pt exch store} def %OK
/exef@pt {accoupler f@pt cvx exec } def %
/point{suitepoints} def
/pointpasnomme {/n@m 0 store diamdot exef@pt} def 
/pointnomme {alph /n@m 1 store dup cvx exec exch 
                dup str dup (i) exch (i) 3 concate diamchaine dup diamdot lt
                {pop diamdot}if 4 -1 roll exch exef@pt exch cvx exec etiqhorcc} def 
   
%% Dessin d'une suite de points  -- Syntaxe [[x1 y1] [x2 y2] ... [xn yn]] suitepoints

/suitepoints{nom? {pointnomme}{point? {pointpasnomme}{{suitepoints} forall}ifelse}ifelse} def

/abscisse{decoupler pop} def % p abscisse OK
/ordonnee{decoupler exch pop} def % p ordonnee OK
/rota {/@ngle exch store decoupler [ @ngle cos @ngle sin @ngle sin neg @ngle cos 0 0]
        transform accoupler} def
         % image d'un point par une rotation: syntaxe point angle rota OK
/addp {decoupler 3 2 roll decoupler exch 4 1 roll exch add 3 1 roll add exch accoupler} def
    % OK
/subp {decoupler 3 2 roll decoupler exch 4 1 roll exch sub 3 1 roll sub exch accoupler} def
    % OK
/scalp {decoupler 3 2 roll decoupler exch 4 1 roll mul 3 1 roll mul add} def
    % OK
/mulp {exch decoupler 2 index mul 3 1 roll mul exch accoupler} def % syntaxe [x y] k mulp 
   % OK
/divp {1 exch div mulp} def %OK
/vectp {decoupler 1 index subp  3 1 roll subp exch 1 index abscisse 1 index ordonnee mul 
           3 1 roll abscisse exch ordonnee mul sub} def
  % [a b c] vectp --> composante en z du produit vectoriel (a-b)^(c-b) sert à déterminer l'orientation du triplet [a b c]
/anglepolaire {decoupler  exch atan} bind def %% a  anglepolaire --> anglepol du vecteur a entre 0 et 360

/norme {decoupler dup mul exch dup mul add sqrt} def
   % OK

/normer {dup norme divp} def
   % OK
/combili {exch 4 1 roll mulp 3 1 roll exch mulp addp} def %  p1 p2 a b -> ap1+bp2
   % OK
/pointsurdroitegraduee {exch decoupler 3 -1 roll dup 1 exch sub exch combili} def % [p1 p2] t -> (1-t)p1+tp2

/isobarycentre {dup length exch origine exch {addp} forall exch  divp} def
/milieu {isobarycentre} def

%% Segments et flèches
/fixeformesegment{/fs@g exch store} def

/nametoexec{/nametype {cvx exec} def /arraytype {} def /integertype {} def /realtype {} def
            [ exch {dup type cvx exec} forall ] } def

/dep@rt {rayoncoin 0 eq cl@ not or 
                        {st@rt} 
                        {[l@st st@rt d@ux] amplitude d@ux st@rt subp normer  exch  2 div  cotg abs rayoncoin abs mul mulp 
                         st@rt addp } ifelse} def

/openpath {nametoexec aload dup  length  1 sub  /n@brs@m exch  store 
                      0 get /l@st exch store   /st@rt exch store  dup  /d@ux exch store 
                      dep@rt  desassembler moveto 
                     1 1 n@brs@m  { fs@g cvx exec} for  } def %OK

/cl@ false store

/segmentdroit {pop decoupler lineto} def
/segmentarrondi {exch  /c@in exch store /dr@p 0 store
                  dup 0 eq {/c@insuiv d@ux store pop}
                                 {n@brs@m eq {cl@ not {/dr@p 1 store} if /c@insuiv st@rt store}  {dup /c@insuiv exch store}ifelse}
                                 ifelse
                  c@in decoupler 
                  dr@p 1 eq {lineto} {c@insuiv decoupler rayoncoin arcto  4  {pop} repeat  }  ifelse 
                  } def  

/closedpath {/cl@ true store openpath  st@rt 0 fs@g cvx exec closepath /cl@ false store } def %OK
           % valable sans devoir indiquer le nombre de cotes

/suitesegments {nonemptyarray? 
                {dup 0 get point? exch pop 
                          {dup length 1 gt {newpath openpath stroke}{pop}ifelse}
                          {{suitesegments} forall} ifelse}
                {pop} ifelse}  def %OK
/suitesegmentspointes{dup nametoexec suitesegments suitepoints} def %OK
/segment {suitesegments} def %OK
/segmentpointe {suitesegmentspointes} def %OK
/suitefleches {/arraytype {} def /nametype {cvx exec} def %OK
          /integertype {pop} def /realtype {pop} def 
          dup [ exch {dup type cvx exec} forall] suitesegments 
          /integertype {} def /realtype {} def
	    [ exch {dup type cvx exec} forall]
          aload length 1 sub 2 div cvi 
          {3 copy exch 3 1 roll accoupler exch pointsurdroitegraduee 
          decoupler moveto
	    exch pop 1 index subp decoupler M@t dtransform exch atan tip} repeat pop} def
/fleche{suitefleches} def	%OK
/suiteflechespointees{dup suitefleches /arraytype {} def /nametype {} def
          /integertype {pop} def /realtype {pop} def
          [ exch {dup type cvx exec} forall] suitepoints } def %OK
/flechepointee{suiteflechespointees} def %OK

/tip {userfalse angleref add dup rotate currentpoint newpath moveto eptr@ 6 mul neg eptr@ 3 mul rlineto 
      eptr@ 1.5 mul eptr@ 3 mul neg rlineto eptr@ 1.5 mul neg eptr@ 3 mul neg rlineto
      closepath c@ltrait fixcolor end fill macrosgn begin neg rotate usertrue} def %OK

/sp@l{dup  0 get point? exch pop {closedpath}  {{sp@l} forall} ifelse }def
/polygone{suitepolygones} def %OK
/suitepolygones{newpath sp@l stroke} def
/polygonepointe{dup nametoexec polygone suitepoints} def %OK
/polygoneoriente{/arraytype {} def /nametype {cvx exec} def %OK
          /integertype {pop} def /realtype {pop} def 
          dup [ exch {dup type cvx exec} forall] polygone 
          /integertype {} def /realtype {} def 
	    [ exch {dup type cvx exec} forall]
	    aload length dup index exch 1 add 2 div cvi  	
          {3 copy exch 3 1 roll accoupler exch pointsurdroitegraduee decoupler moveto
	    exch pop 1 index subp decoupler exch atan orientationpointe add tip} repeat pop} def
/polygonepointeoriente{dup polygoneoriente /arraytype {} def /nametype {} def
          /integertype {pop} def /realtype {pop} def
          [ exch {dup type cvx exec} forall] suitepoints } def %OK
/polygonerempli{suitepolygonesremplis} def %OK
/r@mplir{ userfalse moderemplissage 2 eq 
          {gsave stroke grestore full} {gsave full grestore stroke} ifelse
          usertrue} def
/suitepolygonesremplis{newpath sp@l r@mplir}def
/polygonepointerempli{dup nametoexec polygonerempli suitepoints } def %OK
/polygoneorienterempli{/arraytype {} def /nametype {cvx exec} def %OK
          /integertype {pop} def /realtype {pop} def 
          dup [ exch {dup type cvx exec} forall] polygonerempli
          /integertype {} def /realtype {} def
	    [ exch {dup type cvx exec} forall]
	    aload length dup index exch 1 add 2 div cvi  	
          {3 copy exch 3 1 roll accoupler exch pointsurdroitegraduee decoupler moveto
	    exch pop 1 index subp decoupler exch atan tip} repeat pop} def
/polygonepointeorienterempli{dup polygoneorienterempli /arraytype {} def /nametype {} def
          /integertype {pop} def /realtype {pop} def
          [ exch {dup type cvx exec} forall] suitepoints } def %OK



%% Etoiles régulières Syntaxe: [Centre Un_sommet Nbre_de_sommets Intervalle_entre_deux_sommets] etoile...
/poletoilesommets {decoupler /int@r exch store /n@bre exch store /s@mm exch store /c@ntr exch store 
                                                360 n@bre div int@r mul /@ngrot exch store n@bre int@r pgcd  /r@p exch  store 
                                               r@p 1 eq {[ s@mm  n@bre 1 sub {dup r@t1} repeat ]}        
                                                               { [ r@p  {[ s@mm n@bre r@p idiv 1 sub  {dup r@t1} repeat ] 
                                                                  s@mm  c@ntr subp  360 n@bre div  rota c@ntr addp  /s@mm exch store } repeat ]} ifelse 
                                   }   def 	%OK

/poletoile {poletoilesommets suitepolygones} def %OK
/poletoilerempli{poletoilesommets polygonerempli} def
/poletoilepointe {dup 0 get point nametoexec poletoilesommets dup suitepolygones suitepoints } def %OK
/poletoilepointerempli {dup nametoexec poletoilesommets dup suitepolygonesremplis  suitepoints  0 get point} def  %OK

%% Polygones réguliers Syntaxe: [Centre Un_sommet Nbre_de_sommets] polreg...

/polregsommets{decoupler 3 -1 roll  (Rn) fixerosace Rn} def    %OK
/polreg {polregsommets polygone} def %OK
/polregrempli {polregsommets polygonerempli} def %OK
/polregpointe {dup 0 get point nametoexec polregsommets dup suitepolygones suitepoints} def
/polregpointerempli {dup nametoexec polregsommets dup suitepolygonesremplis  suitepoints  0 get point} def  %OK

/affectervaleurs {/suites@m exch store /suiten@ms exch store
        0 1 suites@m length 1 sub {dup suiten@ms exch get exch suites@m exch get store} for
        } def

%% Rectangles

% Rectangles définis par une diagonale. Syntaxe: [a b] rectanglediag
/rect@ngledi@g {decoupler /c@sg exch store /c@sd exch store /c@id exch store /c@ig exch store 
                [c@ig c@sg c@sd c@id] suitesegments} def
/rectanglediagsommets{decoupler decoupler /ury exch def /urx exch def decoupler/lly exch def /llx exch def
           [[llx lly] [urx lly]  [urx ury]  [llx ury]]} def %OK
/rectanglediag{rectanglediagsommets polygone} def %OK
/rectanglediagpointe{rectanglediagsommets polygonepointe} def %OK
/rectanglediagrempli{rectanglediagsommets polygonerempli} def %OK
/rectanglediagpointerempli{rectanglediagsommets polygonepointerempli} def %OK

% Rectangles définis par une médiane. Syntaxe: [[a b] largeur] rectanglemed 
/rectanglemedsommets{decoupler 2 div exch dup vecnorperp 3 -1 roll mulp exch decoupler 2 copy 
                     4 index addp exch 4 index addp 5 -3 roll exch 2 index subp 
                     3 1 roll exch subp 4 array astore} def %OK
/rectanglemed{rectanglemedsommets polygone} def %OK
/rectanglemedpointe{rectanglemedsommets polygonepointe} def %OK
/rectanglemedrempli{rectanglemedsommets polygonerempli} def %OK
/rectanglemedpointerempli{rectanglemedsommets polygonepointerempli} def %OK



/r@nd{decoupler exch /c@ntrelli exch store  dup 1x exch mulp c@ntrelli addp  /v@1 exch store  1y exch mulp c@ntrelli addp /v@2 exch store 
            /s@ns 1 store 0 360 @rcellip } def 
                                                  % centre rayon r@nd %OK

/cercleversellipse {decoupler  dup 1x exch mulp 2 index addp exch  1y exch mulp 2 index addp 3 array astore} def

/suitedisques{cercle? {newpath r@nd fillstroke}
                                   {droite? {droite}{ {suitedisques } forall } ifelse} 
                                   ifelse} def %OK
/disque{suitedisques}def
/suitecercles{cercle? {newpath r@nd stroke}
                                  {droite?  {droite} { {suitecercles} forall } ifelse} 
                                  ifelse} def %OK

/cercle{suitecercles} def

/arccercleversarcellipse {desassembler  /extr@2 exch store /@nterm exch store /v@1 exch store [v@1 @nterm] mediatrid [extr@2 @nterm] mediatrid
                                         interdroites  pop  
                                        /c@ntrelli exch store  [v@1 c@ntrelli @nterm] vectp signe /s@ns exch store 
                                          /v@2 v@1  90  c@ntrelli rotation store
                                         [ [c@ntrelli v@1 v@2]  0 [v@1 c@ntrelli extr@2] amplitude s@ns 0 lt  {360  sub} if  s@ns ]} def
                               
/arccercle {desassembler  /extr@2 exch store /@nterm exch store /v@1 exch store [v@1 @nterm] mediatrid [extr@2 @nterm] mediatrid
                                         interdroites 
                                         {/c@ntrelli exch store  [v@1 c@ntrelli @nterm] vectp signe /s@ns exch store 
                                          /v@2 v@1  90  c@ntrelli rotation store
                                          0 [v@1 c@ntrelli extr@2] amplitude s@ns 0 lt  {360  sub} if  @rcellip stroke}
                                         {@nterm [v@1 extr@2] danssegment? 
                                                                 {[v@1 extr@2] segment} 
                                                                 {v@1 [@nterm extr@2] danssegment? not {v@1 /extr@1 extr@2 store /extr@2 exch store} if
                                                                           [v@1 @nterm] demidroite [extr@2 dup 2 mulp v@1 subp] demidroite} 
                                                                 ifelse } 
                                          ifelse } def
/calculcercle {cercleversellipse calculellipse} def
/calcularccercle{arccercleversarcellipse calcularcellipse} def


/amplitude{desassembler 1 index subp anglepolaire  3 1 roll   subp anglepolaire  sub 
                      dup 0 lt {360 add} if} def

/arcsecteur {decoupler /@r1 exch store  dup amplitude @r1 0 lt {360 sub} if 2 div  /@ngrot exch store 
                   desassembler pop dup /c@ntr exch store  subp normer  @r1 abs mulp c@ntr addp    
                    dup r@t1 dup  r@t1 3 assembler} def

/arccerclesecteur {arcsecteur arccercle} def

/sectcirc@ {desassembler  /extr@2 exch store /@nterm exch store /extr@1 exch store [extr@1 @nterm] mediatrid [extr@2 @nterm] mediatrid
                                         interdroites 
                                         {/c@ exch store c@ decoupler 2 copy moveto [c@ extr@1] distance  extr@1 c@ subp anglepolaire extr@2 c@ subp anglepolaire 
                                           2 copy gt {exch} if 2 copy accoupler @nterm c@ subp anglepolaire exch dans? {arc}{arcn} ifelse closepath}  if} def            

/secteurcercle{sectcirc@ stroke} def

/secteurdisque {sectcirc@ fillstroke} def



/p@stip {c@ntre  [0 r@yon] addp decoupler moveto} def
/cercleorientepos {cercle p@stip 180 tip} def
/cercleorienteneg {cercle p@stip 0 tip } def
/disqueorientepos {disque p@stip 180 tip } def
/disqueorienteneg {disque p@stip 0 tip} def
/cerccp{dup distance exch decoupler pop exch accoupler} def
/cerclecp{cerccp cercle} def
/cerc3p{/trip exch store trip decoupler 3 copy accoupler mediatrid 4 1 roll accoupler mediatrid exch pop 
        interdroites {exch 1 index accoupler distance accoupler}
                           {pop trip decoupler pop accoupler} ifelse} def % [a b c] cerc3p -> [centre rayon] ou couple de deux points
/cercle3p{cerc3p cercle} def
/pointsurcerccp {/@ngl exch store  decoupler 1 index subp @ngl rota addp} def 
      % [centre point] angle pointsurcerccp -> point

% Intersection d'une droite et d'un cercle
/droiteintercercle{decoupler /r@y exch store dup 2 index projection dup /pr@j exch store
                   accoupler distance dup /dist@ exch store r@y gt
                   {pop false}
                   {vecnorparall  r@y dup mul dist@ dup mul sub sqrt mulp dup pr@j addp
                    exch pr@j exch subp accoupler true} ifelse} def %OK
                % Syntaxe: droite cercle droiteintercercle -> [a1 a2] true ou false
                                      
/pointinter2drcerc{decoupler pop 1 index projection 2 mulp exch decoupler pop subp} def

/distance {decoupler subp norme} def %OK

% Intersection de deux cercles [c1 r1] et [c2 r2]
/axeradical {decoupler dup mul 3 -1 roll decoupler dup mul exch 3 1 roll exch sub
             3 copy pop accoupler distance dup dup mul exch 3 1 roll add 2 div exch div
             3 1 roll accoupler dup vecnorparall 3 -1 roll mulp exch dup 1 get 3 -1 roll
             addp exch perpd} def %OK
/intercercles {1 index axeradical exch droiteintercercle} def %OK
               % Syntaxe: [c1 r1] [c2 r2] intercercles -> [a1 a2] true ou false

                
% Syntaxe p [c1 r1] [c2 r2] pointinter2cerccerc
/pointinter2cerccerc{decoupler pop exch decoupler pop accoupler 1 index exch projection 2 mulp 
exch subp} def

%% Secteurs angulaires
%% syntaxes [b a c] secteur 
/secteurangulaire {decoupler 1 index exch accoupler demidroite exch accoupler demidroite} def


%% amplitude calcule l'amplitude (en degrés) d'un angle  orienté [a b c] secteur amplitude -> anglepolaire ba - anglepolaire bc (nombre entre 0 et 360)
%% rotation qui applique [ba] sur [bc]



/camembert {decoupler /r@ exch store /c@ exch store /c@uleurs exch store /pr@p exch store
            c@ 1x r@ mulp addp /dep@ exch store
            0 1 pr@p length 1 sub {dup c@uleurs exch get fixecouleurfond 
                       pr@p exch get 360 mul [c@ dep@] exch pointsurcerccp /fin@ exch store
                       [ [ dep@ c@ fin@ ] r@] arcsecteur secteurdisque /dep@ fin@ store } for } def


/cercto@llip {5 -2 roll accoupler /c@ntrelli exch store 3 2 roll dup 0 accoupler c@ntrelli addp /v@1 exch store  0 exch accoupler c@ntrelli addp  /v@2 exch store } def

/arccerclebis {desassembler /extr@2 exch store /@nterm exch store /extr@1 exch store 
                                         [extr@1 @nterm]  mediatrid  [extr@2 @nterm] mediatrid interdroites  
                                         {/c@ exch store c@ [c@ extr@1] distance dup 1x exch mulp c@ addp exch 1y exch mulp c@ addp 3 assembler fixe@llipse
                                          extr@1 c@ subp anglepolaire extr@2 c@ subp anglepolaire  
                                          [extr@1 c@ extr@2] vectp signe /@r1 exch store [extr@1 c@ @nterm] vectp signe /@r2 exch store 
                                          [@nterm c@ extr@2] vectp signe /@r3 exch store
                                          @r1 0 ne {@r2 0 eq {@r3} {@r3 0 eq{@r2} { @r1 dup  @r2 eq { @r1 @r3 ne {neg} if}  {neg} ifelse} ifelse} ifelse}
                                                         {@r2} ifelse /s@ns exch store 
                                           @rcellip}
                                         {@nterm   [extr@1  extr@2] danssegment? 
                                                                 {extr@1 decoupler lineto extr@2 decoupler lineto} 
                                                                 {extr@1 [@nterm extr@2] danssegment? not {extr@1 /extr@1 extr@2 store /extr@2 exch store} if
                                                                           [extr@1 @nterm] demidroitebis decoupler moveto decoupler lineto 
                                                                           [extr@2 dup 2 mulp extr@1 subp] demidroitebis exch decoupler moveto decoupler lineto } 
                                                                 ifelse } 
                                          ifelse } def



/openchemin{dup length  /l@n exch store
            dup 0 get point? {decoupler moveto} 
                                       {dup 0 get  point?  {decoupler moveto arccerclebis}  {pop arcellipsebis} ifelse} ifelse
            1 1 l@n 1 sub {exch dup 3 -1 roll get point? {decoupler lineto}{dup 0 get point? {pop arccerclebis} {pop arcellipsebis} ifelse}  ifelse} for
            pop } def

/chemin {newpath openchemin  stroke } def
/lacet{newpath openchemin closepath stroke} def
/lacetrempli{newpath openchemin closepath r@mplir} def
/suitechemins  {nonemptyarray? 
                        {chemin? {chemin} {{suitechemins} forall} ifelse}
                        {pop} ifelse}  def
/suitelacets  {nonemptyarray? 
                        {chemin?  {lacet} {{suitelacets} forall} ifelse}
                        {pop} ifelse}  def 
/suitelacetsremplis  {nonemptyarray? 
                        {chemin? {lacetrempli} {{suitelacetsremplis} forall} ifelse}
                        {pop} ifelse}  def 

% syntaxe  [secteur positionpointe rayon] arcoripos ou arcorineg 
/arc@ri {desassembler /r@y exch store /c@eff exch store /s@c exch store s@c 1 get /c@ntre exch store
              newpath c@ntre s@c decoupler pop subp normer r@y mulp addp decoupler moveto
              s@c 0 get c@ntre subp anglepolaire /@1 exch store
              s@c 2 get c@ntre subp anglepolaire /@2 exch store
              @ri 0 gt {@1 @2 gt {@2 360 add /@2 exch store} if}
                           {@1 @2 lt {@2 360 sub /@2 exch store} if} ifelse
             c@ntre decoupler r@y @1 @2  @ri 0 gt {arc}{arcn} ifelse stroke
             newpath c@ntre @2 @1 sub c@eff mul @1 add /bet@ exch store bet@ dup cos exch sin accoupler r@y mulp addp
             decoupler moveto bet@ 90 @ri 0 gt {add}{sub} ifelse tip
} def

/arcoripos {/@ri 1 store arc@ri} def
/arcorineg {/@ri -1 store arc@ri} def

% flèche incurvée
% syntaxe [ [a positionpointe b] angle ] flechecourbe
	
/flechecourbe {suiteflechescourbes} def

% Suites de flèches courbes
% Syntaxe [ [ a pospointe b pospointe ... m] angle] suiteflechescourbes

/suiteflechescourbes {/arraytype {} def /nametype {cvx exec} def
           /integertype {pop} def /realtype {pop} def
           decoupler /@ng exch store /s@ite exch store
           @ng 180 gt {/@ri 1 store} {/@ri -1 store} ifelse 
           @ng 180 eq {pop}
                               {@ng 0 eq @ng 360 eq or 
                                           {suitefleches} 
                                           {s@ite length 3 sub 2 div /n@bre exch store 
                                                  0 1 n@bre {2 mul /i@ exch store s@ite i@ get dup type cvx exec 
                                                  s@ite  i@ 1 add get /p@s exch store 
                                                  s@ite  i@ 2 add get dup type cvx exec 
			  2 copy exch subp @ng rota origine accoupler 
                                                  2 index exch perpd 3 1 roll 2 copy accoupler mediatrid
                                                  4 -1 roll interdroites pop exch 3 array astore
                                                 dup dup 1 get exch 0 get accoupler distance 
			 p@s exch 3 array astore arc@ri } for 
                                              }ifelse}ifelse} def 


/suiteflechescourbespointees{dup suiteflechescourbes 
           /arraytype {} def /nametype {} def
           /integertype {pop} def /realtype {pop} def
           decoupler pop 
          [ exch {dup type cvx exec} forall] suitepoints } def %OK
/flechecourbepointee{suiteflechescourbespointees} def %OK

/boucle % Syntaxe [a b] boucle a: origine de la boucle, b "deuxième sommet"
   {decoupler tr@nsform /@xtre exch store tr@nsform /@ri exch store userfalse
              @xtre @ri subp 0.5 mulp dup 45 rota /c@ntr1 exch store 
              90 rota /c@ntr2 exch store
              newpath @ri decoupler moveto @ri c@ntr1 addp decoupler 
              @xtre c@ntr2 addp decoupler @xtre decoupler curveto
              @xtre c@ntr2 subp decoupler @ri c@ntr1 -90 rota addp decoupler 
              @ri decoupler curveto closepath stroke } def
%            @xtre dup decoupler moveto usertrue
%            @ri subp anglepolaire 80 add tip} def

/suiteboucles {nonemptyarray? 
                {dup 0 get point? exch pop 
                                               {boucle}{{suiteboucles} forall} ifelse}
                {pop} ifelse}  def %OK


%% Couleurs

/rouge [1 0 0] store
/vert [0 1 0] store
/bleu [0 0 1] store
/jaune [0 0 1 0] store
/cyan [1 0 0 0] store
/magenta [0 1 0 0] store
/noir [0 0 0 1] store
/blanc [1 1 1] store
/gris [0.7 0.7 0.7] store
/fixecouleurtrait {/c@ltrait exch store} def
/fixecouleurfond {/c@lremp exch store} def
/fixecouleurtexte {/c@lnom exch store} def
/fixecouleurs {dup dup fixecouleurtrait fixecouleurfond fixecouleurtexte} def
/full{moderemplissage 1 eq {eofill} {fill} ifelse} def
/fixemoderemplissage{/moderemplissage exch store} def
/couleurtrait {c@ltrait} def
/couleurfond {c@lremp} def
/couleurtexte {c@lnom} def
/sauvecouleurs {couleurtrait couleurfond couleurtexte 3 array astore /c@uleurs exch store} def
/restaurecouleurs {c@uleurs decoupler fixecouleurtexte fixecouleurfond fixecouleurtrait} def

%% Fonctions arithmétiques

/symb {/carsymb 1 string store carsymb exch 0 exch put carsymb} def %OK crée une chaîne d'un seul 
% caractère à partir du code de celui-ci. syntaxe code symb -> résultat sur la pile
 
/diamchaine {alph newpath 0 0 moveto true charpath pathbbox 3 -1 roll sub abs 
             3 1 roll sub abs 2 copy lt {exch pop}{pop} ifelse 2 div} def

%% Découpage d'un nombre en tranches de 3 chiffres 
/espacer {(.) search 
              {espacerg /str1 exch store pop espacerd  /str2 exch store str2 length 0 gt
                                   {str1 (.) concatener str2 concatener} {str1} ifelse}
              {espacerg} ifelse} def
/espacervirg{(.) search 
              {espacerg pop (,) concatener exch espacerd concatener}
              {espacerg} ifelse} def
/espacerg {dup length /l@n exch store l@n 4 gt 
           {dup 0 l@n 3 sub getinterval exch l@n 3 sub 3 getinterval 
            ( ) exch concatener exch espacerg exch concatener} if } def

/suppzero {dup length 0 gt {dup dup length 1 sub /l@n exch store l@n 1 getinterval (0) eq 
                {0 l@n getinterval suppzero} if} if} def
  
/espacerd {suppzero dup length /l@n exch store l@n 4 gt
           {dup 0 3 getinterval ( ) concatener
            exch 3 l@n 3 sub getinterval espacerd concatener} if} def

/numshow {str espacer show} def %afficher un nombre en y incorporant des blancs

/numvirgshow{str espacervirg show} def

%% Résolution de l'équation du premier degré a+bx=c Syntaxe a b c resequ@

/resequ@{3 2 roll sub exch div} def


%% Placement d'un exposant
/depsup {0 talph@ c@h div 3 div rmoveto  /talph@  talph@ 0.8 mul store alph@ findfont talph@ scalefont setfont} def 
/retsup{/talph@ talph@ 1.25 mul store alph@ findfont talph@ scalefont setfont  0 talph@ c@h div 3 div neg rmoveto } def

%% Placement d'un indice inférieur
/depinf {0 talph@ c@h div 3 div neg rmoveto  /talph@  talph@ 0.8 mul store alph@ findfont talph@ scalefont setfont} def 
/retinf{/talph@ talph@ 1.25 mul store alph@ findfont talph@ scalefont setfont  0 talph@ c@h div 3 div  rmoveto } def

%/showalg {(^) search {showalg pop depsup showalg  retsup} {(_) search {showalg pop depinf showalg retinf}{show}ifelse} ifelse} %def

%% Choix du style de trait (tirete, plein, pointillé)
/traitplein {[] 0 setdash} def
/traittirete {[4] 0 setdash} def
/traitpointille {[2] 0 setdash} def

/droitehori {decoupler pop ordonnee dup x@i exch accoupler exch x@a exch accoupler accoupler segment} def
/droiteverti {decoupler pop abscisse dup y@i accoupler exch y@a  accoupler accoupler segment} def

/droite {/dr@ite exch store
             dr@ite decoupler abscisse exch abscisse eq 
            {dr@ite droiteverti} 
            {dr@ite decoupler ordonnee exch ordonnee eq
                          {dr@ite droitehori} 
	         {dr@ite droiteintercadre {segment} if} ifelse}
             ifelse} def

/droiteintercadre {/dr@ite exch store  /d@f dr@ite decoupler exch subp store      
 	            dr@ite decoupler pop abscisse d@f abscisse    
                              2 copy  x@i resequ@ /t@1 exch store x@a resequ@ /t@2 exch store %t@1 bord gauche, t@2 bord droit
                              dr@ite decoupler pop ordonnee d@f ordonnee 
                              2 copy  y@i resequ@ /t@3 exch store y@a resequ@ /t@4 exch store  %t@3 bord inf t@4 bord sup
                          t@1 t@2 gt {/t@1 t@2 /t@2 t@1 store store} if
                          t@1 t@3 gt {/t@1 t@3 /t@3 t@1 store store} if
                          t@1 t@4 gt {/t@1 t@4 /t@4 t@1 store store} if                          
                          t@1 t@3 gt {/t@1 t@3 /t@3 t@1 store store} if
                          t@2 t@3 gt {/t@2 t@3 /t@3 t@2 store store} if
                          t@2 t@4 gt {/t@2 t@4 /t@4 t@2 store store} if
                          t@3 t@4 gt {/t@3 t@4 /t@4 t@3 store store} if
                          dr@ite decoupler pop d@f t@2 mulp addp 
                          dr@ite decoupler pop d@f t@3 mulp addp
                          2 copy dansdomaine? {dansdomaine? {accoupler true} {pop pop false} ifelse}
                          {pop pop pop false} ifelse
                           }def % OK

/demidroite {dup  decoupler /interm@ exch store /@ri exch store droiteintercadre 
                             {dup 0 get @ri accoupler interm@ exch danssegment?  
                              {0 get } {1 get} ifelse @ri accoupler segment} if} def 

/demidroitebis {dup  decoupler /interm@ exch store /@ri exch store droiteintercadre 
                             {dup 0 get @ri accoupler interm@ exch danssegment?  
                              {0 get } {1 get} ifelse @ri } if} def 
                        

/calculc@t {droiteintercadre  %c@t1 et c@t2: n° des cotés contenant b@p1 et b@p2
                             {decoupler /b@p2 exch store /b@p1 exch store 
                              b@p1 abscisse b@p2 abscisse gt   {/b@p1 b@p2  /b@p2 b@p1 store store} if       %b@p1 est le plus à gauche
                              b@p1 decoupler  dup y@i eq {pop pop /c@t1 1 store}   
                                                                             {y@a eq {pop /c@t1 3 store} {pop /c@t1 2 store} ifelse} ifelse 
                              b@p2 decoupler  dup y@i eq {pop pop /c@t2 1 store}           
                                                                             {y@a eq {pop /c@t2 3 store} {pop /c@t2 4 store} ifelse} ifelse} if } def

/coingicadre {calculc@t 
                        c@t1 1 eq {[ b@p1   [x@i y@i]  [x@i y@a]  c@t2 4 eq {[x@a y@a]} if b@p2 ] } if
                        c@t1 2 eq {[ [x@i y@i] b@p1  b@p2  c@t2 3 eq {[x@a y@a] [x@a y@i]} if c@t2 4 eq {[x@a y@i]} if ] } if
                        c@t1 3 eq {[ [x@i y@i] [x@i y@a] b@p1 b@p2 c@t2 4 eq {[x@a y@i]} if ]} if
                        } def

/coindscadre {calculc@t 
                        c@t1 1 eq  {[ b@p1 b@p2  c@t2 3 eq {[x@a y@a]} if [x@a y@i] ] } if 
                        c@t1 2 eq {[ b@p2 b@p1 [x@i y@a]  c@t2 1 eq {[x@a y@a] [x@a y@i]} if  c@t2 4 eq { [x@a y@a]} if ] } if
                        c@t1 3 eq {[ b@p1 b@p2  c@t2 1 eq {[x@a y@i] [x@a y@a]} if  c@t2 4 eq { [x@a y@a]} if  ]} if
                        } def


/interdroites {2 copy  vecnorperp exch vecnorparall scalp abs epszero lt
                   {pop pop false} 
                   {dup vecnorperp  dup 3 index decoupler  exch subp scalp 
                    3 1 roll exch decoupler  pop 3 index decoupler pop subp scalp
                    exch div dup /t@ exch store pointsurdroitegraduee true} ifelse} def
          % Syntaxe [p1 p2] [p3 p4] interdroites --> false ou pt true

/droiteintersegment {exch interdroites 
                         {t@ [0 1] dans? {true}{pop false} ifelse } 
                         {false} ifelse}def

          % Syntaxe [p1 p2] [p3 p4] droiteintersegment --> false ou pt true

/intersegments {2 copy droiteintersegment 
                   {pop exch droiteintersegment}
                   {pop pop false}          
                   ifelse} def

          % Syntaxe [p1 p2] [p3 p4] intersegments --> false ou pt true

/perpd {vecnorperp 1 index addp accoupler} def % syntaxe p1 [p2 p3] perpd
    % OK

/droiteperp{perpd droite} def
    % OK

/inclid {decoupler exch subp exch rota exch dup 3 1 roll addp accoupler} def
    % syntaxe p1 angle [p2 p3] inclid

/droiteincli {inclid droite} def

/vecnorperp {decoupler subp decoupler neg exch accoupler normer} def 
    %syntaxe [p1 p2] vecnorperp fournit une vecteur normé perpendiculaire à la droite [p1 p2] OK

/projection {dup 3 1 roll vecnorperp 1 index addp accoupler interdroites pop} def 
    %syntaxe p1 [p2 p3] projection --> proj

/paralld {decoupler exch subp 1 index addp accoupler} def %syntaxe p1 [p2 p3] paralld
    % OK
/droiteparall{paralld droite} def
    % OK
/droitemediatrice {mediatrid droite} def
    % OK
/mediatrid {dup  milieu exch perpd } def
    %OK
/droitebissectrice {bissecd droite} def
    %syntaxe [a b c] bissectrice %OK

/bissecd {decoupler 1 index subp normer 1 index addp 3 1 roll exch 1 index subp normer addp accoupler mediatrid} def             
    % OK


/vecnorparall{decoupler subp normer} def 
    %syntaxe [a b] vecnorparall fournit un vecteur normé parallèle à [a b] OK


/equerre {aload pop /r@y exch store  aload pop exch /c@ntre exch store
          c@ntre subp normer r@y mulp exch c@ntre subp normer r@y mulp 2 copy addp exch
          3 array astore [ exch {c@ntre addp} forall ] suitesegments} def




/fixecaptortue{/captortue exch store}def
/fixepositortue{dup crayon 1 eq {positortue exch accoupler segment}{pop} ifelse
                /positortue exch store}def
/ga{captortue add /captortue exch store}def
/dr{neg ga }def
/av{[captortue dup cos exch sin] exch mulp positortue addp fixepositortue}def
/re{neg av}def
/lc{/crayon 0 store}def 
/bc{/crayon 1 store}def
/vers{positortue subp anglepolaire} def

/epsmax 1 store
/crayon 1 store
/captortue 90 store
/positortue [0 0] store

/dessiner {/dr@pdessin true store /N 0 store {1 index N get exch cvx exec /N N 1 add store} forall pop  /r@pp 1 store /@nglerot 0 store baisserdr@p } def
/baisserdr@p {/dr@prot false store  /dr@phom false store /dr@paffi false store /dr@pdessin false store /dr@psym false store} def
/suitedessins {/dr@pdessin true store {instructions dessiner} forall baisserdr@p} def

 

/r@t1{nombre? not {point? {c@ntr subp @ngrot rota c@ntr addp} {array? {[ exch  {r@t1} forall]} if} ifelse} if} def
/rotation{/dr@prot true store /c@ntr exch store /@ngrot exch store r@t1 /@ngrot 0 store } def

/groupederotations{/c@ntr exch store  /@ngrot exch store 
                [exch 360 dup @ngrot pgcd idiv  1 sub {dup r@t1} repeat ]
                } def 
/appliquer {aload pop cvx exec} def


/tr@ns1 {nombre? not {point? {v@ct addp} {array? {[ exch {tr@ns1} forall ] } if}  ifelse }  if} def
/translation {/v@ct exch store tr@ns1} def
/demi@rbite {  {dup tr@ns1 dup dansdomaine? not {pop exit} if } loop } def
/groupedetranslations{/v@ct exch store /m@tif exch store [ m@tif demi@rbite /v@ct v@ct -1 mulp store 
 m@tif demi@rbite  ]} def
/dansdomaine? {nombre? {pop false} { point? {dup abscisse [x@i x@a] dans? exch ordonnee [y@i y@a] dans? and}
                                                              { array? {false exch {dansdomaine? or} forall }{pop false} ifelse } ifelse} ifelse  } def 
         %% syntaxe xx dansdomaine? ---> true ou false
         %% une suite de points est dans le domaine dès qu'un point de la suite est dans le domaine

/h@m1{point? {c@ntr subp r@pp mulp c@ntr addp}
                        {array? {cercle? {decoupler r@pp mul exch h@m1 exch accoupler} {[exch {h@m1} forall] }  ifelse}  if } 
                        ifelse } def
/homothetie{/dr@phom true store /c@ntr exch store /r@pp exch store h@m1} def


/grouped'homotheties{/c@ntr exch store /r@pp exch store /r@ppn r@pp abs store
               [ exch  { dup h@m1 /r@ppn r@ppn r@pp abs mul store dup dansdomaine? not r@ppn abs 0.001 le or {exit} if} loop 
                /r@pp 1 r@pp div store /r@ppn r@pp abs  store  { dup h@m1 /r@ppn r@ppn  r@pp abs mul store dup dansdomaine? not r@ppn 0.001 le or {exit} if} loop]
               } def


/s@m1{point? {c@ntr subp r@pp mulp  @ng rota c@ntr addp}
                       {array? {cercle? {decoupler r@pp mul exch s@m1 exch accoupler} {[exch {s@m1} forall]} ifelse} if }
                       ifelse } def
/similitude{/dr@phom true store /dr@prot true store /c@ntr exch store /@ng exch store /r@pp exch store s@m1} def

/groupedesimilitudes{/c@ntr exch store /@ng exch store /r@pp exch store  /r@ppn r@pp abs store
               [ exch  { dup s@m1 /r@ppn r@ppn r@pp abs mul store dup dansdomaine? not  r@ppn abs 0.001 le or {exit} if} loop 
                /r@pp 1 r@pp div store /r@ppn r@pp abs  store /@ng @ng neg store  
               { dup s@m1 /r@ppn r@ppn  r@pp abs mul store dup dansdomaine? not  r@ppn 0.001 le or {exit} if} loop]
               } def

/sym@{nombre? {} {point? {dup dr@ite perpd dr@ite interdroites pop 2 mulp exch subp}
                                                                    {array? {[exch {sym@} forall] } if } ifelse } ifelse } def
/symetrie{/dr@psym true store /dr@ite exch store  sym@ } def

/inv@{nombre? {}
           {point? {c@rcle decoupler dup mul 3 1 roll exch accoupler dup distance dup mul exch 3 1 roll div pointsurdroitegraduee}
                       {[ exch {inv@} forall]}ifelse}ifelse } def
/inversion{/c@rcle exch store  inv@} def


/@ffi {point? {decoupler m@trice transform accoupler}
                     {array? {[exch {@ffi} forall]} if } ifelse} def
/affinite {/dr@paffi true store /m@trice exch store  @ffi} def


end
%%EndProlog

/debut {
%%/P@r@mAjust where {pop /CoeffAjust P@r@mAjust dup 0 get exch 2 get div store}{/CoeffAjust 1 store} ifelse
/CoeffAjust 1 store
macrosgn begin /saveobj save store
/pilem@t [] store
usertrue
[[1 cm 1 cm ][11 cm 11 cm]] fixecadre
0 fixeposy
0 fixeposx
1 fixepasgraduationx
1 fixepasgraduationy
/l@belx false store
/l@bely false store
/orientationpointe 0 store
/dot fixeformepoint
/segmentdroit fixeformesegment
/rayoncoin 0 store
noir fixecouleurtrait
noir fixecouleurfond
noir fixecouleurtexte
0 fixemoderemplissage
/Symbol fixepolicesymbolique 
/Times-BoldItalic fixepolice 
12 fixecorps %OK
1.2 fixetaillepoint
1 fixeepaisseurtrait
/epszero 0.000003 store
/epsmax 1 store
/crayon 1 store
/captortue 90 store
/positortue [0 0] store
baisserdr@p
/@ng 0 store
} def
/fin {saveobj restore end} def

debut
[[1 cm 1 cm][18.59233 cm 19.12821 cm]] fixecadre
[[-10.79617 -12.18808][6.796157 5.94013]] fixedomaine
/p84  [-1.133975 -7.356025]   store
/p69  [-0.6339746 -6.49]   store
/p894  [-1.5 -5.99]   store
/p895  [-2 -6.856025]   store
/p101  [-2.866025 -7.356025]   store
/p899  [-2.5 -5.99]   store
/p900  [-3.366025 -6.49]   store
/p904  [-1.500001 -5.989999]   store
/p908  [-1.500001 -4.989999]   store
/p909  [-2.500001 -4.99]   store
/p913  [-1.500002 -3.989999]   store
/p914  [-2.500001 -3.99]   store
/p918  [-0.6339755 -5.489999]   store
/p922  [-0.6339761 -4.489999]   store
/p926  [-2.000002 -3.123974]   store
/p930  [-1.999999 -7.856024]   store
/p934  [-1.133974 -7.356024]   store
/p938  [-3.866025 -7.356026]   store
/p942  [-0.1339757 -7.356025]   store
/p946  [-3.366024 -8.222051]   store
/p950  [-0.6339755 -8.222049]   store
/p954  [-3.366024 -8.222051]   store
/p955  [-2.499999 -8.72205]   store
/p959  [-1.499999 -8.722049]   store
/p960  [-0.6339741 -8.222049]   store
/p964  [-0.6339761 -4.489999]   store
/p968  [-0.6339741 -5.489999]   store
/p972  [-1.499999 -8.722049]   store
/p976  [-4.73205 -7.856026]   store
/p977  [-4.232049 -8.722051]   store
/p981  [0.2320504 -8.722047]   store
/p982  [0.7320488 -7.856023]   store
/p986  [-5.232049 -8.722051]   store
/p990  [1.232049 -8.722046]   store
/p994  [-5.232049 -9.722051]   store
/p995  [-4.232049 -9.722051]   store
/p999  [-2.499998 -9.72205]   store
/p1000  [-1.499999 -9.722049]   store
/p1004  [0.2320513 -9.722046]   store
/p1005  [1.23205 -9.722045]   store
/p1009  [-5.232048 -10.72205]   store
/p1010  [-4.232048 -10.72205]   store
/p1014  [-2.499998 -10.72205]   store
/p1015  [-1.499998 -10.72205]   store
/p1019  [0.2320523 -10.72204]   store
/p1020  [1.232051 -10.72204]   store
/p1028  [-4.732048 -11.58808]   store
/p1032  [-1.999997 -11.58807]   store
/p1036  [0.7320523 -11.58807]   store
/p1040  [-3.866022 -12.08808]   store
/p1041  [-3.366023 -11.22205]   store
/p1045  [-3.366023 -11.22205]   store
/p1046  [-2.866022 -12.08808]   store
/p1050  [-1.133972 -12.08807]   store
/p1051  [-0.6339724 -11.22205]   store
/p1055  [-0.6339712 -11.22204]   store
/p1056  [-0.1339712 -12.08807]   store
/p1060  [-3.366023 -11.22205]   store
/p1064  [-0.6339772 -11.22204]   store
/p1068  [-3.366024 -9.22205]   store
/p1072  [-3.366024 -9.22205]   store
/p1076  [-3.366024 -10.22205]   store
/p1080  [-3.366023 -10.22205]   store
/p1084  [-3.366021 -10.22205]   store
/p1088  [-3.366022 -10.22205]   store
/p1092  [-3.366024 -10.22205]   store
/p1096  [-3.366022 -9.222047]   store
/p1100  [-3.366025 -9.222049]   store
/p1104  [-3.366023 -8.222048]   store
/p1108  [-0.6339747 -9.22205]   store
/p1112  [-0.6339727 -9.222051]   store
/p1116  [-0.6339754 -10.22205]   store
/p1120  [-0.6339713 -10.22205]   store
/p1124  [-0.6339818 -10.22205]   store
/p1128  [-0.6339743 -10.22203]   store
/p1132  [-0.6339693 -10.22204]   store
/p1136  [-0.6339676 -9.222047]   store
/p1140  [-0.6339746 -9.222046]   store
/p1144  [-0.6339728 -8.222045]   store
/p1148  [0.2320512 -4.989999]   store
/p1152  [0.2320505 -5.99]   store
/p1156  [-0.6339736 -5.489999]   store
/p1160  [0.73205 -6.856027]   store
/p1161  [0.2320534 -5.990001]   store
/p1165  [0.7320493 -6.856025]   store
/p1171  [2.098074 -4.490002]   store
/p1172  [1.598075 -3.623976]   store
/p1173  [0.7320494 -4.123975]   store
/p1174  [1.232048 -4.990001]   store
/p1176  [1.232047 -5.990001]   store
/p1178  [0.2320485 -4.99]   store
/p1179  [0.2320478 -5.99]   store
/p1183  [0.732048 -4.123976]   store
/p1187  [-0.1339769 -3.623975]   store
/p1188  [-0.6339769 -4.49]   store
/p1192  [-1.000002 -3.123975]   store
/p1193  [-1.500002 -3.989999]   store
/p1197  [0.732049 -3.123975]   store
/p1201  [-0.1339762 -2.623975]   store
/p1205  [-2.000002 -3.123974]   store
/p1209  [2.098073 -5.49]   store
/p1213  [2.098073 -4.490001]   store
/p1217  [0.7320475 -6.856026]   store
/p1221  [2.598074 -3.623978]   store
/p1225  [1.732048 -6.856026]   store
/p1229  [3.098072 -4.490003]   store
/p1233  [1.732048 -6.856026]   store
/p1234  [2.598072 -6.356027]   store
/p1238  [3.098072 -5.490001]   store
/p1239  [3.098073 -4.490002]   store
/p1243  [-0.1339762 -2.623975]   store
/p1247  [0.7320497 -3.123974]   store
/p1251  [3.098072 -5.490001]   store
/p1255  [0.7320467 -7.856026]   store
/p1256  [1.732047 -7.856025]   store
/p1260  [3.964097 -3.990002]   store
/p1261  [3.464098 -3.123978]   store
/p1265  [1.232046 -8.72205]   store
/p1269  [4.464096 -3.123978]   store
/p1273  [2.098071 -9.222051]   store
/p1274  [2.598072 -8.356026]   store
/p1278  [3.464098 -6.856026]   store
/p1279  [3.964097 -5.990002]   store
/p1283  [4.830121 -4.490002]   store
/p1284  [5.330121 -3.623977]   store
/p1288  [2.964095 -9.722051]   store
/p1289  [3.464096 -8.856026]   store
/p1293  [4.330123 -7.356027]   store
/p1294  [4.830124 -6.490002]   store
/p1298  [5.696142 -4.989999]   store
/p1299  [6.196142 -4.123975]   store
/p1303  [3.964099 -9.722054]   store
/p1307  [5.330119 -7.356025]   store
/p1311  [6.696146 -4.990002]   store
/p1315  [4.830126 -9.222054]   store
/p1316  [4.330122 -8.356027]   store
/p1320  [4.330122 -8.356027]   store
/p1321  [5.330126 -8.356029]   store
/p1325  [6.196144 -6.856026]   store
/p1326  [5.69615 -5.990003]   store
/p1330  [5.696142 -5.989997]   store
/p1331  [6.696146 -5.99]   store
/p1335  [4.330122 -8.356027]   store
/p1339  [5.696139 -5.990002]   store
/p1343  [2.598072 -7.356026]   store
/p1347  [2.598072 -7.356026]   store
/p1351  [3.464097 -7.856027]   store
/p1355  [3.464097 -7.856026]   store
/p1359  [3.464098 -7.856024]   store
/p1363  [3.464098 -7.856025]   store
/p1367  [3.464097 -7.856027]   store
/p1371  [2.59807 -7.356023]   store
/p1375  [2.59807 -7.356027]   store
/p1379  [1.732046 -6.856023]   store
/p1383  [3.964099 -4.990003]   store
/p1387  [3.9641 -4.990002]   store
/p1391  [4.830123 -5.490005]   store
/p1395  [4.830125 -5.490001]   store
/p1399  [4.83012 -5.49001]   store
/p1403  [4.830106 -5.489994]   store
/p1407  [4.830118 -5.489995]   store
/p1411  [3.9641 -4.989996]   store
/p1415  [3.964095 -4.990001]   store
/p1419  [3.09807 -4.489998]   store
/p1423  [0.7320506 -2.123974]   store
/p1427  [1.598076 -2.623976]   store
/p1431  [0.73205 -3.123974]   store
/p1435  [2.598077 -2.623978]   store
/p1436  [1.598078 -2.623974]   store
/p1440  [2.598075 -2.623978]   store
/p1446  [1.232054 -0.2579533]   store
/p1447  [0.2320538 -0.2579509]   store
/p1448  [0.2320519 -1.257951]   store
/p1449  [1.232052 -1.257953]   store
/p1451  [2.098076 -1.757954]   store
/p1453  [0.7320502 -2.123977]   store
/p1454  [1.598074 -2.623979]   store
/p1458  [0.2320515 -1.257952]   store
/p1462  [-0.6339748 -1.757951]   store
/p1463  [-0.1339756 -2.623976]   store
/p1467  [-1.500001 -2.25795]   store
/p1468  [-1.000002 -3.123975]   store
/p1472  [-0.6339729 -0.7579505]   store
/p1476  [-1.499999 -1.257949]   store
/p1480  [-2.000002 -3.123974]   store
/p1484  [2.098077 -0.7579543]   store
/p1488  [1.232052 -0.257953]   store
/p1492  [2.598075 -2.62398]   store
/p1496  [0.7320557 0.6080724]   store
/p1500  [3.098076 -1.757955]   store
/p1504  [1.732054 0.60807]   store
/p1508  [3.098076 -1.757955]   store
/p1509  [3.098077 -0.7579559]   store
/p1513  [2.598078 0.10807]   store
/p1514  [1.732054 0.6080712]   store
/p1518  [-1.499999 -1.257949]   store
/p1522  [-0.6339736 -0.7579493]   store
/p1526  [2.598078 0.10807]   store
/p1530  [3.464099 -3.123981]   store
/p1531  [3.9641 -2.257956]   store
/p1535  [1.732054 1.608069]   store
/p1536  [0.7320564 1.608071]   store
/p1540  [4.464098 -3.123983]   store
/p1544  [1.232056 2.474094]   store
/p1548  [5.330125 -2.623984]   store
/p1549  [4.830126 -1.757958]   store
/p1553  [3.964103 -0.2579567]   store
/p1554  [3.464104 0.6080683]   store
/p1558  [2.598079 2.108068]   store
/p1559  [2.098081 2.974093]   store
/p1563  [6.19615 -2.123986]   store
/p1564  [5.696151 -1.257959]   store
/p1568  [4.830129 0.2420416]   store
/p1569  [4.330131 1.108068]   store
/p1573  [3.4641 2.608064]   store
/p1574  [2.964102 3.474089]   store
/p1578  [6.696155 -1.257959]   store
/p1582  [5.330126 1.108064]   store
/p1586  [3.964106 3.474091]   store
/p1590  [6.696157 -0.2579585]   store
/p1591  [5.696154 -0.2579597]   store
/p1595  [5.696154 -0.2579597]   store
/p1596  [6.196159 0.6080679]   store
/p1600  [5.330128 2.108064]   store
/p1601  [4.330133 2.108068]   store
/p1605  [4.330124 2.108064]   store
/p1606  [4.830129 2.974091]   store
/p1610  [5.696154 -0.2579597]   store
/p1614  [4.330127 2.108059]   store
/p1618  [3.964101 -1.257957]   store
/p1622  [3.964101 -1.257957]   store
/p1626  [4.830128 -0.7579589]   store
/p1630  [4.830127 -0.757958]   store
/p1634  [4.830126 -0.7579563]   store
/p1638  [4.830127 -0.7579572]   store
/p1642  [4.830128 -0.7579589]   store
/p1646  [3.964098 -1.257957]   store
/p1650  [3.964101 -1.257959]   store
/p1654  [3.098073 -1.757956]   store
/p1658  [2.598081 1.108069]   store
/p1662  [2.598081 1.108072]   store
/p1666  [3.464108 1.608067]   store
/p1670  [3.464106 1.608071]   store
/p1674  [3.464111 1.608062]   store
/p1678  [3.46409 1.608058]   store
/p1682  [3.464096 1.608068]   store
/p1686  [2.598075 1.108074]   store
/p1690  [2.598078 1.108068]   store
/p1694  [1.73205 0.6080703]   store
/p1698  [-1.499998 -0.2579477]   store
/p1702  [-0.6339704 0.2420505]   store
/p1706  [-0.6339739 -0.7579488]   store
/p1710  [-0.1339671 1.108075]   store
/p1711  [-0.633971 0.2420536]   store
/p1715  [-0.1339685 1.108074]   store
/p1721  [-2.866017 1.108079]   store
/p1722  [-3.36602 0.2420559]   store
/p1723  [-2.499996 -0.2579466]   store
/p1724  [-1.999993 0.608077]   store
/p1726  [-1.133967 1.108075]   store
/p1728  [-1.499996 -0.2579494]   store
/p1729  [-0.6339693 0.2420481]   store
/p1733  [-2.499995 -0.2579476]   store
/p1737  [-2.499998 -1.257948]   store
/p1738  [-1.499998 -1.257949]   store
/p1742  [-2.5 -2.257948]   store
/p1743  [-1.500001 -2.257949]   store
/p1747  [-3.366022 -0.7579451]   store
/p1751  [-3.366024 -1.757945]   store
/p1755  [-2.000002 -3.123974]   store
/p1759  [-1.999991 1.608076]   store
/p1763  [-2.866018 1.108078]   store
/p1767  [-0.1339668 1.108073]   store
/p1771  [-3.866016 1.108082]   store
/p1775  [-0.6339653 1.974099]   store
/p1779  [-3.366014 1.974105]   store
/p1783  [-0.6339653 1.974099]   store
/p1784  [-1.499989 2.474101]   store
/p1788  [-2.499989 2.474102]   store
/p1789  [-3.366015 1.974105]   store
/p1793  [-3.366024 -1.757945]   store
/p1797  [-3.366023 -0.7579451]   store
/p1801  [-2.499989 2.474102]   store
/p1805  [0.7320597 1.60807]   store
/p1806  [0.2320612 2.474097]   store
/p1810  [-4.232038 2.474105]   store
/p1811  [-4.732039 1.608083]   store
/p1815  [1.232061 2.474094]   store
/p1819  [-5.232037 2.474107]   store
/p1823  [1.232064 3.474094]   store
/p1824  [0.232064 3.474097]   store
/p1828  [-1.499987 3.474101]   store
/p1829  [-2.499986 3.474102]   store
/p1833  [-4.232036 3.474104]   store
/p1834  [-5.232035 3.474106]   store
/p1838  [1.232066 4.474093]   store
/p1839  [0.2320659 4.474096]   store
/p1843  [-1.499984 4.474101]   store
/p1844  [-2.499984 4.474103]   store
/p1848  [-4.232034 4.474098]   store
/p1849  [-5.232033 4.474101]   store
/p1853  [0.7320684 5.340124]   store
/p1857  [-1.999983 5.340122]   store
/p1861  [-4.732032 5.34013]   store
/p1865  [-0.1339561 5.840127]   store
/p1866  [-0.6339576 4.974098]   store
/p1870  [-0.6339576 4.974098]   store
/p1871  [-1.133956 5.84013]   store
/p1875  [-2.866006 5.840124]   store
/p1876  [-3.366008 4.974106]   store
/p1880  [-3.366009 4.974096]   store
/p1881  [-3.866007 5.840127]   store
/p1885  [-0.6339576 4.974098]   store
/p1889  [-3.366003 4.974096]   store
/p1893  [-0.6339624 2.974098]   store
/p1897  [-0.6339624 2.974098]   store
/p1901  [-0.6339595 3.974098]   store
/p1905  [-0.6339605 3.974098]   store
/p1909  [-0.6339625 3.974098]   store
/p1913  [-0.6339615 3.974098]   store
/p1917  [-0.6339595 3.974098]   store
/p1921  [-0.6339644 2.974095]   store
/p1925  [-0.6339614 2.974097]   store
/p1929  [-0.6339663 1.974096]   store
/p1933  [-3.366012 2.974106]   store
/p1937  [-3.366014 2.974107]   store
/p1941  [-3.366008 3.974106]   store
/p1945  [-3.366012 3.974106]   store
/p1949  [-3.366002 3.974106]   store
/p1953  [-3.366009 3.974086]   store
/p1957  [-3.366014 3.974096]   store
/p1961  [-3.366019 2.974103]   store
/p1965  [-3.366012 2.974102]   store
/p1969  [-3.366016 1.974101]   store
/p1973  [-4.23205 -1.257943]   store
/p1977  [-4.232046 -0.2579416]   store
/p1981  [-3.366024 -0.7579451]   store
/p1985  [-4.732043 0.6080869]   store
/p1986  [-4.232049 -0.2579406]   store
/p1990  [-4.732043 0.6080849]   store
/p1996  [-6.098074 -1.757934]   store
/p1997  [-5.598078 -2.623962]   store
/p1998  [-4.73205 -2.123965]   store
/p1999  [-5.232047 -1.257938]   store
/p2001  [-5.232043 -0.2579381]   store
/p2003  [-4.232047 -1.257941]   store
/p2004  [-4.232043 -0.2579418]   store
/p2008  [-4.732049 -2.123965]   store
/p2012  [-3.866026 -2.623968]   store
/p2013  [-3.366023 -1.757944]   store
/p2017  [-3.000002 -3.12397]   store
/p2018  [-2.5 -2.257947]   store
/p2022  [-4.732053 -3.123965]   store
/p2026  [-3.866029 -3.623967]   store
/p2030  [-2.000002 -3.123974]   store
/p2034  [-6.09807 -0.7579358]   store
/p2038  [-6.098074 -1.757935]   store
/p2042  [-4.732041 0.6080858]   store
/p2046  [-6.598077 -2.623957]   store
/p2050  [-5.732041 0.6080886]   store
/p2054  [-7.098072 -1.757931]   store
/p2058  [-5.732041 0.6080886]   store
/p2059  [-6.598067 0.1080918]   store
/p2063  [-7.09807 -0.7579322]   store
/p2064  [-7.098073 -1.757932]   store
/p2068  [-3.866029 -3.623967]   store
/p2072  [-4.732054 -3.123966]   store
/p2076  [-7.09807 -0.7579322]   store
/p2080  [-4.732037 1.608085]   store
/p2081  [-5.732037 1.608088]   store
/p2085  [-7.964098 -2.257929]   store
/p2086  [-7.464102 -3.123954]   store
/p2090  [-5.232034 2.474112]   store
/p2094  [-8.4641 -3.123951]   store
/p2098  [-6.098057 2.974115]   store
/p2099  [-6.598061 2.108092]   store
/p2103  [-7.464091 0.6080943]   store
/p2104  [-7.964093 -0.2579288]   store
/p2108  [-8.830121 -1.757927]   store
/p2109  [-9.330123 -2.623949]   store
/p2113  [-6.96408 3.474117]   store
/p2114  [-7.464084 2.608094]   store
/p2118  [-8.330115 1.108098]   store
/p2119  [-8.830118 0.2420741]   store
/p2123  [-9.69614 -1.257927]   store
/p2124  [-10.19614 -2.123949]   store
/p2128  [-7.964084 3.474123]   store
/p2132  [-9.33011 1.108098]   store
/p2136  [-10.69614 -1.257921]   store
/p2140  [-8.830112 2.974126]   store
/p2141  [-8.330111 2.108097]   store
/p2145  [-8.330111 2.108097]   store
/p2146  [-9.330115 2.108103]   store
/p2150  [-10.19614 0.6081016]   store
/p2151  [-9.696145 -0.2579227]   store
/p2155  [-9.696137 -0.2579288]   store
/p2156  [-10.69614 -0.2579226]   store
/p2160  [-8.330111 2.108097]   store
/p2164  [-9.696134 -0.2579236]   store
/p2168  [-6.598063 1.108091]   store
/p2172  [-6.598063 1.108091]   store
/p2176  [-7.464087 1.608095]   store
/p2180  [-7.464087 1.608094]   store
/p2184  [-7.464088 1.608092]   store
/p2188  [-7.464088 1.608093]   store
/p2192  [-7.464087 1.608095]   store
/p2196  [-6.598062 1.108088]   store
/p2200  [-6.598062 1.108092]   store
/p2204  [-5.732039 0.6080863]   store
/p2208  [-7.964097 -1.257927]   store
/p2212  [-7.964099 -1.257929]   store
/p2216  [-8.83012 -0.7579234]   store
/p2220  [-8.830122 -0.757927]   store
/p2224  [-8.830117 -0.7579179]   store
/p2228  [-8.830104 -0.7579344]   store
/p2232  [-8.830115 -0.7579337]   store
/p2236  [-7.964098 -1.257935]   store
/p2240  [-7.964094 -1.257929]   store
/p2244  [-7.09807 -1.757935]   store
/p2248  [-4.732058 -4.123966]   store
/p2252  [-5.598081 -3.623961]   store
/p2256  [-4.732054 -3.123966]   store
/p2260  [-6.598083 -3.623956]   store
/p2261  [-5.598084 -3.623963]   store
/p2265  [-6.598081 -3.623957]   store
/p2271  [-5.232066 -5.989985]   store
/p2272  [-4.232066 -5.989991]   store
/p2273  [-4.232061 -4.989991]   store
/p2274  [-5.232061 -4.989986]   store
/p2276  [-6.098084 -4.489982]   store
/p2278  [-4.732057 -4.123963]   store
/p2279  [-5.59808 -3.623959]   store
/p2283  [-4.232061 -4.989989]   store
/p2287  [-3.366033 -4.489993]   store
/p2288  [-3.86603 -3.623966]   store
/p2292  [-2.500006 -3.989997]   store
/p2293  [-3.000002 -3.12397]   store
/p2297  [-3.366038 -5.489994]   store
/p2301  [-2.50001 -4.989997]   store
/p2305  [-2.000002 -3.123974]   store
/p2309  [-6.098087 -5.489982]   store
/p2313  [-5.232065 -5.989986]   store
/p2317  [-6.59808 -3.623955]   store
/p2321  [-4.73207 -6.856013]   store
/p2325  [-7.098084 -4.489978]   store
/p2329  [-5.732069 -6.856007]   store
/p2333  [-7.098084 -4.489978]   store
/p2334  [-7.098088 -5.489977]   store
/p2338  [-6.598091 -6.356005]   store
/p2339  [-5.732068 -6.856008]   store
/p2343  [-2.50001 -4.989997]   store
/p2347  [-3.366037 -5.489995]   store
/p2351  [-6.598091 -6.356005]   store
/p2355  [-7.464103 -3.123951]   store
/p2356  [-7.964107 -3.989974]   store
/p2360  [-5.732072 -7.856007]   store
/p2361  [-4.732074 -7.856011]   store
/p2365  [-8.464102 -3.123947]   store
/p2369  [-5.232076 -8.722033]   store
/p2373  [-9.33013 -3.623942]   store
/p2374  [-8.830134 -4.48997]   store
/p2378  [-7.964115 -5.989974]   store
/p2379  [-7.464119 -6.856001]   store
/p2383  [-6.598098 -8.356003]   store
/p2384  [-6.098102 -9.222029]   store
/p2388  [-10.19616 -4.123939]   store
/p2389  [-9.696161 -4.989966]   store
/p2393  [-8.830143 -6.48997]   store
/p2394  [-8.330147 -7.355998]   store
/p2398  [-7.464121 -8.855996]   store
/p2399  [-6.964125 -9.722023]   store
/p2403  [-10.69616 -4.989964]   store
/p2407  [-9.330142 -7.355991]   store
/p2411  [-7.964129 -9.722022]   store
/p2415  [-10.69617 -5.989964]   store
/p2416  [-9.696166 -5.989966]   store
/p2420  [-9.696166 -5.989966]   store
/p2421  [-10.19617 -6.855992]   store
/p2425  [-9.330147 -8.355991]   store
/p2426  [-8.330152 -8.355998]   store
/p2430  [-8.330143 -8.355994]   store
/p2431  [-8.830151 -9.222019]   store
/p2435  [-9.696166 -5.989966]   store
/p2439  [-8.330146 -8.355989]   store
/p2443  [-7.964111 -4.989974]   store
/p2447  [-7.964111 -4.989974]   store
/p2451  [-8.830139 -5.489969]   store
/p2455  [-8.830138 -5.48997]   store
/p2459  [-8.830137 -5.489972]   store
/p2463  [-8.830138 -5.489971]   store
/p2467  [-8.830139 -5.489969]   store
/p2471  [-7.964107 -4.989974]   store
/p2475  [-7.96411 -4.989972]   store
/p2479  [-7.098081 -4.489978]   store
/p2483  [-6.598097 -7.356004]   store
/p2487  [-6.598097 -7.356006]   store
/p2491  [-7.464126 -7.855999]   store
/p2495  [-7.464124 -7.856003]   store
/p2499  [-7.464129 -7.855994]   store
/p2503  [-7.464108 -7.85599]   store
/p2507  [-7.464114 -7.856]   store
/p2511  [-6.598091 -7.356009]   store
/p2515  [-6.598094 -7.356002]   store
/p2519  [-5.732064 -6.856008]   store
/p2523  [-2.500014 -5.989999]   store
/p2527  [-3.366043 -6.489995]   store
/p2531  [-3.366037 -5.489995]   store
/p2535  [-3.866049 -7.356018]   store
/p2536  [-3.366043 -6.489998]   store
/p2540  [-3.866048 -7.356016]   store
rouge fixecouleurfond
1 fixeepaisseurtrait
[  p84   p69   p894   p895  ] polygonerempli
[  p101   p895   p899   p900  ] polygonerempli
jaune fixecouleurfond
[  p899   p895   p904  ] polygonerempli
rouge fixecouleurfond
[  p899   p904   p908   p909  ] polygonerempli
[  p909   p908   p913   p914  ] polygonerempli
jaune fixecouleurfond
[  p908   p904   p918  ] polygonerempli
[  p913   p908   p922  ] polygonerempli
[  p914   p913   p926  ] polygonerempli
[  p895   p101   p930  ] polygonerempli
[  p895   p930   p934  ] polygonerempli
[  p101   p900   p938  ] polygonerempli
[  p69   p934   p942  ] polygonerempli
[  p101   p938   p946  ] polygonerempli
[  p942   p934   p950  ] polygonerempli
rouge fixecouleurfond
[  p930   p101   p954   p955  ] polygonerempli
[  p934   p930   p959   p960  ] polygonerempli
jaune fixecouleurfond
[  p908   p918   p964  ] polygonerempli
[  p904   p69   p968  ] polygonerempli
[  p930   p955   p972  ] polygonerempli
rouge fixecouleurfond
[  p954   p938   p976   p977  ] polygonerempli
[  p942   p960   p981   p982  ] polygonerempli
jaune fixecouleurfond
[  p977   p976   p986  ] polygonerempli
[  p982   p981   p990  ] polygonerempli
rouge fixecouleurfond
[  p977   p986   p994   p995  ] polygonerempli
[  p972   p955   p999   p1000  ] polygonerempli
[  p990   p981   p1004   p1005  ] polygonerempli
[  p995   p994   p1009   p1010  ] polygonerempli
[  p1000   p999   p1014   p1015  ] polygonerempli
[  p1005   p1004   p1019   p1020  ] polygonerempli
jaune fixecouleurfond
[  p1010   p1009   p1028  ] polygonerempli
[  p1015   p1014   p1032  ] polygonerempli
[  p1020   p1019   p1036  ] polygonerempli
rouge fixecouleurfond
[  p1010   p1028   p1040   p1041  ] polygonerempli
[  p1032   p1014   p1045   p1046  ] polygonerempli
[  p1015   p1032   p1050   p1051  ] polygonerempli
[  p1036   p1019   p1055   p1056  ] polygonerempli
jaune fixecouleurfond
[  p1040   p1046   p1060  ] polygonerempli
[  p1050   p1056   p1064  ] polygonerempli
[  p954   p977   p1068  ] polygonerempli
[  p977   p995   p1072  ] polygonerempli
[  p1072   p995   p1076  ] polygonerempli
[  p995   p1010   p1080  ] polygonerempli
[  p1010   p1060   p1084  ] polygonerempli
[  p1060   p1014   p1088  ] polygonerempli
[  p1014   p999   p1092  ] polygonerempli
[  p1092   p999   p1096  ] polygonerempli
[  p999   p955   p1100  ] polygonerempli
[  p1100   p955   p1104  ] polygonerempli
[  p960   p972   p1108  ] polygonerempli
[  p972   p1000   p1112  ] polygonerempli
[  p1112   p1000   p1116  ] polygonerempli
[  p1000   p1015   p1120  ] polygonerempli
[  p1015   p1064   p1124  ] polygonerempli
[  p1064   p1019   p1128  ] polygonerempli
[  p1019   p1004   p1132  ] polygonerempli
[  p1132   p1004   p1136  ] polygonerempli
[  p1004   p981   p1140  ] polygonerempli
[  p1140   p981   p1144  ] polygonerempli
[  p964   p968   p1148  ] polygonerempli
[  p1148   p968   p1152  ] polygonerempli
[  p69   p1152   p1156  ] polygonerempli
rouge fixecouleurfond
[  p69   p942   p1160   p1161  ] polygonerempli
jaune fixecouleurfond
[  p942   p982   p1165  ] polygonerempli
rouge fixecouleurfond
[  p1171   p1172   p1173   p1174  ] polygonerempli
[  p1176   p1174   p1178   p1179  ] polygonerempli
jaune fixecouleurfond
[  p1178   p1174   p1183  ] polygonerempli
rouge fixecouleurfond
[  p1178   p1183   p1187   p1188  ] polygonerempli
[  p1188   p1187   p1192   p1193  ] polygonerempli
jaune fixecouleurfond
[  p1187   p1183   p1197  ] polygonerempli
[  p1192   p1187   p1201  ] polygonerempli
[  p1193   p1192   p1205  ] polygonerempli
[  p1174   p1176   p1209  ] polygonerempli
[  p1174   p1209   p1213  ] polygonerempli
[  p1176   p1179   p1217  ] polygonerempli
[  p1172   p1213   p1221  ] polygonerempli
[  p1176   p1217   p1225  ] polygonerempli
[  p1221   p1213   p1229  ] polygonerempli
rouge fixecouleurfond
[  p1209   p1176   p1233   p1234  ] polygonerempli
[  p1213   p1209   p1238   p1239  ] polygonerempli
jaune fixecouleurfond
[  p1187   p1197   p1243  ] polygonerempli
[  p1183   p1172   p1247  ] polygonerempli
[  p1209   p1234   p1251  ] polygonerempli
rouge fixecouleurfond
[  p1233   p1217   p1255   p1256  ] polygonerempli
[  p1221   p1239   p1260   p1261  ] polygonerempli
jaune fixecouleurfond
[  p1256   p1255   p1265  ] polygonerempli
rouge fixecouleurfond
[  p1256   p1265   p1273   p1274  ] polygonerempli
[  p1251   p1234   p1278   p1279  ] polygonerempli
[  p1269   p1260   p1283   p1284  ] polygonerempli
[  p1274   p1273   p1288   p1289  ] polygonerempli
[  p1279   p1278   p1293   p1294  ] polygonerempli
[  p1284   p1283   p1298   p1299  ] polygonerempli
jaune fixecouleurfond
[  p1289   p1288   p1303  ] polygonerempli
[  p1294   p1293   p1307  ] polygonerempli
[  p1299   p1298   p1311  ] polygonerempli
rouge fixecouleurfond
[  p1289   p1303   p1315   p1316  ] polygonerempli
[  p1307   p1293   p1320   p1321  ] polygonerempli
[  p1294   p1307   p1325   p1326  ] polygonerempli
[  p1311   p1298   p1330   p1331  ] polygonerempli
jaune fixecouleurfond
[  p1315   p1321   p1335  ] polygonerempli
[  p1325   p1331   p1339  ] polygonerempli
[  p1233   p1256   p1343  ] polygonerempli
[  p1256   p1274   p1347  ] polygonerempli
[  p1347   p1274   p1351  ] polygonerempli
[  p1274   p1289   p1355  ] polygonerempli
[  p1289   p1335   p1359  ] polygonerempli
[  p1335   p1293   p1363  ] polygonerempli
[  p1293   p1278   p1367  ] polygonerempli
[  p1367   p1278   p1371  ] polygonerempli
[  p1278   p1234   p1375  ] polygonerempli
[  p1375   p1234   p1379  ] polygonerempli
[  p1239   p1251   p1383  ] polygonerempli
[  p1251   p1279   p1387  ] polygonerempli
[  p1387   p1279   p1391  ] polygonerempli
[  p1279   p1294   p1395  ] polygonerempli
[  p1294   p1339   p1399  ] polygonerempli
[  p1339   p1298   p1403  ] polygonerempli
[  p1298   p1283   p1407  ] polygonerempli
[  p1407   p1283   p1411  ] polygonerempli
[  p1283   p1260   p1415  ] polygonerempli
[  p1415   p1260   p1419  ] polygonerempli
[  p1243   p1247   p1423  ] polygonerempli
[  p1423   p1247   p1427  ] polygonerempli
[  p1172   p1427   p1431  ] polygonerempli
rouge fixecouleurfond
[  p1172   p1221   p1435   p1436  ] polygonerempli
jaune fixecouleurfond
[  p1221   p1261   p1440  ] polygonerempli
rouge fixecouleurfond
[  p1446   p1447   p1448   p1449  ] polygonerempli
[  p1451   p1449   p1453   p1454  ] polygonerempli
jaune fixecouleurfond
[  p1453   p1449   p1458  ] polygonerempli
rouge fixecouleurfond
[  p1453   p1458   p1462   p1463  ] polygonerempli
[  p1463   p1462   p1467   p1468  ] polygonerempli
jaune fixecouleurfond
[  p1462   p1458   p1472  ] polygonerempli
[  p1467   p1462   p1476  ] polygonerempli
[  p1468   p1467   p1480  ] polygonerempli
[  p1449   p1451   p1484  ] polygonerempli
[  p1449   p1484   p1488  ] polygonerempli
[  p1451   p1454   p1492  ] polygonerempli
[  p1447   p1488   p1496  ] polygonerempli
[  p1451   p1492   p1500  ] polygonerempli
[  p1496   p1488   p1504  ] polygonerempli
rouge fixecouleurfond
[  p1484   p1451   p1508   p1509  ] polygonerempli
[  p1488   p1484   p1513   p1514  ] polygonerempli
jaune fixecouleurfond
[  p1462   p1472   p1518  ] polygonerempli
[  p1458   p1447   p1522  ] polygonerempli
[  p1484   p1509   p1526  ] polygonerempli
rouge fixecouleurfond
[  p1508   p1492   p1530   p1531  ] polygonerempli
[  p1496   p1514   p1535   p1536  ] polygonerempli
jaune fixecouleurfond
[  p1531   p1530   p1540  ] polygonerempli
[  p1536   p1535   p1544  ] polygonerempli
rouge fixecouleurfond
[  p1531   p1540   p1548   p1549  ] polygonerempli
[  p1526   p1509   p1553   p1554  ] polygonerempli
[  p1544   p1535   p1558   p1559  ] polygonerempli
[  p1549   p1548   p1563   p1564  ] polygonerempli
[  p1554   p1553   p1568   p1569  ] polygonerempli
[  p1559   p1558   p1573   p1574  ] polygonerempli
jaune fixecouleurfond
[  p1564   p1563   p1578  ] polygonerempli
[  p1569   p1568   p1582  ] polygonerempli
[  p1574   p1573   p1586  ] polygonerempli
rouge fixecouleurfond
[  p1564   p1578   p1590   p1591  ] polygonerempli
[  p1582   p1568   p1595   p1596  ] polygonerempli
[  p1569   p1582   p1600   p1601  ] polygonerempli
[  p1586   p1573   p1605   p1606  ] polygonerempli
jaune fixecouleurfond
[  p1590   p1596   p1610  ] polygonerempli
[  p1600   p1606   p1614  ] polygonerempli
[  p1508   p1531   p1618  ] polygonerempli
[  p1531   p1549   p1622  ] polygonerempli
[  p1622   p1549   p1626  ] polygonerempli
[  p1549   p1564   p1630  ] polygonerempli
[  p1564   p1610   p1634  ] polygonerempli
[  p1610   p1568   p1638  ] polygonerempli
[  p1568   p1553   p1642  ] polygonerempli
[  p1642   p1553   p1646  ] polygonerempli
[  p1553   p1509   p1650  ] polygonerempli
[  p1650   p1509   p1654  ] polygonerempli
[  p1514   p1526   p1658  ] polygonerempli
[  p1526   p1554   p1662  ] polygonerempli
[  p1662   p1554   p1666  ] polygonerempli
[  p1554   p1569   p1670  ] polygonerempli
[  p1569   p1614   p1674  ] polygonerempli
[  p1614   p1573   p1678  ] polygonerempli
[  p1573   p1558   p1682  ] polygonerempli
[  p1682   p1558   p1686  ] polygonerempli
[  p1558   p1535   p1690  ] polygonerempli
[  p1690   p1535   p1694  ] polygonerempli
[  p1518   p1522   p1698  ] polygonerempli
[  p1698   p1522   p1702  ] polygonerempli
[  p1447   p1702   p1706  ] polygonerempli
rouge fixecouleurfond
[  p1447   p1496   p1710   p1711  ] polygonerempli
jaune fixecouleurfond
[  p1496   p1536   p1715  ] polygonerempli
rouge fixecouleurfond
[  p1721   p1722   p1723   p1724  ] polygonerempli
[  p1726   p1724   p1728   p1729  ] polygonerempli
jaune fixecouleurfond
[  p1728   p1724   p1733  ] polygonerempli
rouge fixecouleurfond
[  p1728   p1733   p1737   p1738  ] polygonerempli
[  p1738   p1737   p1742   p1743  ] polygonerempli
jaune fixecouleurfond
[  p1737   p1733   p1747  ] polygonerempli
[  p1742   p1737   p1751  ] polygonerempli
[  p1743   p1742   p1755  ] polygonerempli
[  p1724   p1726   p1759  ] polygonerempli
[  p1724   p1759   p1763  ] polygonerempli
[  p1726   p1729   p1767  ] polygonerempli
[  p1722   p1763   p1771  ] polygonerempli
[  p1726   p1767   p1775  ] polygonerempli
[  p1771   p1763   p1779  ] polygonerempli
rouge fixecouleurfond
[  p1759   p1726   p1783   p1784  ] polygonerempli
[  p1763   p1759   p1788   p1789  ] polygonerempli
jaune fixecouleurfond
[  p1737   p1747   p1793  ] polygonerempli
[  p1733   p1722   p1797  ] polygonerempli
[  p1759   p1784   p1801  ] polygonerempli
rouge fixecouleurfond
[  p1783   p1767   p1805   p1806  ] polygonerempli
[  p1771   p1789   p1810   p1811  ] polygonerempli
jaune fixecouleurfond
[  p1806   p1805   p1815  ] polygonerempli
[  p1811   p1810   p1819  ] polygonerempli
rouge fixecouleurfond
[  p1806   p1815   p1823   p1824  ] polygonerempli
[  p1801   p1784   p1828   p1829  ] polygonerempli
[  p1819   p1810   p1833   p1834  ] polygonerempli
[  p1824   p1823   p1838   p1839  ] polygonerempli
[  p1829   p1828   p1843   p1844  ] polygonerempli
[  p1834   p1833   p1848   p1849  ] polygonerempli
jaune fixecouleurfond
[  p1839   p1838   p1853  ] polygonerempli
[  p1844   p1843   p1857  ] polygonerempli
[  p1849   p1848   p1861  ] polygonerempli
rouge fixecouleurfond
[  p1839   p1853   p1865   p1866  ] polygonerempli
[  p1857   p1843   p1870   p1871  ] polygonerempli
[  p1844   p1857   p1875   p1876  ] polygonerempli
[  p1861   p1848   p1880   p1881  ] polygonerempli
jaune fixecouleurfond
[  p1865   p1871   p1885  ] polygonerempli
[  p1875   p1881   p1889  ] polygonerempli
[  p1783   p1806   p1893  ] polygonerempli
[  p1806   p1824   p1897  ] polygonerempli
[  p1897   p1824   p1901  ] polygonerempli
[  p1824   p1839   p1905  ] polygonerempli
[  p1839   p1885   p1909  ] polygonerempli
[  p1885   p1843   p1913  ] polygonerempli
[  p1843   p1828   p1917  ] polygonerempli
[  p1917   p1828   p1921  ] polygonerempli
[  p1828   p1784   p1925  ] polygonerempli
[  p1925   p1784   p1929  ] polygonerempli
[  p1789   p1801   p1933  ] polygonerempli
[  p1801   p1829   p1937  ] polygonerempli
[  p1937   p1829   p1941  ] polygonerempli
[  p1829   p1844   p1945  ] polygonerempli
[  p1844   p1889   p1949  ] polygonerempli
[  p1889   p1848   p1953  ] polygonerempli
[  p1848   p1833   p1957  ] polygonerempli
[  p1957   p1833   p1961  ] polygonerempli
[  p1833   p1810   p1965  ] polygonerempli
[  p1965   p1810   p1969  ] polygonerempli
[  p1793   p1797   p1973  ] polygonerempli
[  p1973   p1797   p1977  ] polygonerempli
[  p1722   p1977   p1981  ] polygonerempli
rouge fixecouleurfond
[  p1722   p1771   p1985   p1986  ] polygonerempli
jaune fixecouleurfond
[  p1771   p1811   p1990  ] polygonerempli
rouge fixecouleurfond
[  p1996   p1997   p1998   p1999  ] polygonerempli
[  p2001   p1999   p2003   p2004  ] polygonerempli
jaune fixecouleurfond
[  p2003   p1999   p2008  ] polygonerempli
rouge fixecouleurfond
[  p2003   p2008   p2012   p2013  ] polygonerempli
[  p2013   p2012   p2017   p2018  ] polygonerempli
jaune fixecouleurfond
[  p2012   p2008   p2022  ] polygonerempli
[  p2017   p2012   p2026  ] polygonerempli
[  p2018   p2017   p2030  ] polygonerempli
[  p1999   p2001   p2034  ] polygonerempli
[  p1999   p2034   p2038  ] polygonerempli
[  p2001   p2004   p2042  ] polygonerempli
[  p1997   p2038   p2046  ] polygonerempli
[  p2001   p2042   p2050  ] polygonerempli
[  p2046   p2038   p2054  ] polygonerempli
rouge fixecouleurfond
[  p2034   p2001   p2058   p2059  ] polygonerempli
[  p2038   p2034   p2063   p2064  ] polygonerempli
jaune fixecouleurfond
[  p2012   p2022   p2068  ] polygonerempli
[  p2008   p1997   p2072  ] polygonerempli
[  p2034   p2059   p2076  ] polygonerempli
rouge fixecouleurfond
[  p2058   p2042   p2080   p2081  ] polygonerempli
[  p2046   p2064   p2085   p2086  ] polygonerempli
jaune fixecouleurfond
[  p2081   p2080   p2090  ] polygonerempli
[  p2086   p2085   p2094  ] polygonerempli
rouge fixecouleurfond
[  p2081   p2090   p2098   p2099  ] polygonerempli
[  p2076   p2059   p2103   p2104  ] polygonerempli
[  p2094   p2085   p2108   p2109  ] polygonerempli
[  p2099   p2098   p2113   p2114  ] polygonerempli
[  p2104   p2103   p2118   p2119  ] polygonerempli
[  p2109   p2108   p2123   p2124  ] polygonerempli
jaune fixecouleurfond
[  p2114   p2113   p2128  ] polygonerempli
[  p2119   p2118   p2132  ] polygonerempli
[  p2124   p2123   p2136  ] polygonerempli
rouge fixecouleurfond
[  p2114   p2128   p2140   p2141  ] polygonerempli
[  p2132   p2118   p2145   p2146  ] polygonerempli
[  p2119   p2132   p2150   p2151  ] polygonerempli
[  p2136   p2123   p2155   p2156  ] polygonerempli
jaune fixecouleurfond
[  p2140   p2146   p2160  ] polygonerempli
[  p2150   p2156   p2164  ] polygonerempli
[  p2058   p2081   p2168  ] polygonerempli
[  p2081   p2099   p2172  ] polygonerempli
[  p2172   p2099   p2176  ] polygonerempli
[  p2099   p2114   p2180  ] polygonerempli
[  p2114   p2160   p2184  ] polygonerempli
[  p2160   p2118   p2188  ] polygonerempli
[  p2118   p2103   p2192  ] polygonerempli
[  p2192   p2103   p2196  ] polygonerempli
[  p2103   p2059   p2200  ] polygonerempli
[  p2200   p2059   p2204  ] polygonerempli
[  p2064   p2076   p2208  ] polygonerempli
[  p2076   p2104   p2212  ] polygonerempli
[  p2212   p2104   p2216  ] polygonerempli
[  p2104   p2119   p2220  ] polygonerempli
[  p2119   p2164   p2224  ] polygonerempli
[  p2164   p2123   p2228  ] polygonerempli
[  p2123   p2108   p2232  ] polygonerempli
[  p2232   p2108   p2236  ] polygonerempli
[  p2108   p2085   p2240  ] polygonerempli
[  p2240   p2085   p2244  ] polygonerempli
[  p2068   p2072   p2248  ] polygonerempli
[  p2248   p2072   p2252  ] polygonerempli
[  p1997   p2252   p2256  ] polygonerempli
rouge fixecouleurfond
[  p1997   p2046   p2260   p2261  ] polygonerempli
jaune fixecouleurfond
[  p2046   p2086   p2265  ] polygonerempli
rouge fixecouleurfond
[  p2271   p2272   p2273   p2274  ] polygonerempli
[  p2276   p2274   p2278   p2279  ] polygonerempli
jaune fixecouleurfond
[  p2278   p2274   p2283  ] polygonerempli
rouge fixecouleurfond
[  p2278   p2283   p2287   p2288  ] polygonerempli
[  p2288   p2287   p2292   p2293  ] polygonerempli
jaune fixecouleurfond
[  p2287   p2283   p2297  ] polygonerempli
[  p2292   p2287   p2301  ] polygonerempli
[  p2293   p2292   p2305  ] polygonerempli
[  p2274   p2276   p2309  ] polygonerempli
[  p2274   p2309   p2313  ] polygonerempli
[  p2276   p2279   p2317  ] polygonerempli
[  p2272   p2313   p2321  ] polygonerempli
[  p2276   p2317   p2325  ] polygonerempli
[  p2321   p2313   p2329  ] polygonerempli
rouge fixecouleurfond
[  p2309   p2276   p2333   p2334  ] polygonerempli
[  p2313   p2309   p2338   p2339  ] polygonerempli
jaune fixecouleurfond
[  p2287   p2297   p2343  ] polygonerempli
[  p2283   p2272   p2347  ] polygonerempli
[  p2309   p2334   p2351  ] polygonerempli
rouge fixecouleurfond
[  p2333   p2317   p2355   p2356  ] polygonerempli
[  p2321   p2339   p2360   p2361  ] polygonerempli
jaune fixecouleurfond
[  p2356   p2355   p2365  ] polygonerempli
[  p2361   p2360   p2369  ] polygonerempli
rouge fixecouleurfond
[  p2356   p2365   p2373   p2374  ] polygonerempli
[  p2351   p2334   p2378   p2379  ] polygonerempli
[  p2369   p2360   p2383   p2384  ] polygonerempli
[  p2374   p2373   p2388   p2389  ] polygonerempli
[  p2379   p2378   p2393   p2394  ] polygonerempli
[  p2384   p2383   p2398   p2399  ] polygonerempli
jaune fixecouleurfond
[  p2389   p2388   p2403  ] polygonerempli
[  p2394   p2393   p2407  ] polygonerempli
[  p2399   p2398   p2411  ] polygonerempli
rouge fixecouleurfond
[  p2389   p2403   p2415   p2416  ] polygonerempli
[  p2407   p2393   p2420   p2421  ] polygonerempli
[  p2394   p2407   p2425   p2426  ] polygonerempli
[  p2411   p2398   p2430   p2431  ] polygonerempli
jaune fixecouleurfond
[  p2415   p2421   p2435  ] polygonerempli
[  p2425   p2431   p2439  ] polygonerempli
[  p2333   p2356   p2443  ] polygonerempli
[  p2356   p2374   p2447  ] polygonerempli
[  p2447   p2374   p2451  ] polygonerempli
[  p2374   p2389   p2455  ] polygonerempli
[  p2389   p2435   p2459  ] polygonerempli
[  p2435   p2393   p2463  ] polygonerempli
[  p2393   p2378   p2467  ] polygonerempli
[  p2467   p2378   p2471  ] polygonerempli
[  p2378   p2334   p2475  ] polygonerempli
[  p2475   p2334   p2479  ] polygonerempli
[  p2339   p2351   p2483  ] polygonerempli
[  p2351   p2379   p2487  ] polygonerempli
[  p2487   p2379   p2491  ] polygonerempli
[  p2379   p2394   p2495  ] polygonerempli
[  p2394   p2439   p2499  ] polygonerempli
[  p2439   p2398   p2503  ] polygonerempli
[  p2398   p2383   p2507  ] polygonerempli
[  p2507   p2383   p2511  ] polygonerempli
[  p2383   p2360   p2515  ] polygonerempli
[  p2515   p2360   p2519  ] polygonerempli
[  p2343   p2347   p2523  ] polygonerempli
[  p2523   p2347   p2527  ] polygonerempli
[  p2272   p2527   p2531  ] polygonerempli
rouge fixecouleurfond
[  p2272   p2321   p2535   p2536  ] polygonerempli
jaune fixecouleurfond
[  p2321   p2361   p2540  ] polygonerempli
[ p1261  p1269 p1260 ] polygonerempli
fin
